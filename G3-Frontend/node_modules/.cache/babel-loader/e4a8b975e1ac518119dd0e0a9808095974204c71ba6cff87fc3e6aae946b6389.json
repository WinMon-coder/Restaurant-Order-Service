{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport TableView from \"../views/TableView.vue\";\nimport RegisterView from \"../views/RegisterView.vue\";\nimport MenuView from \"../views/MenuView.vue\";\nimport OrderView from \"../views/OrderView.vue\";\nimport ProfileView from \"../views/ProfileView.vue\";\nimport AdminUserView from \"../views/AdminUserView.vue\";\nimport AdminView from \"../views/AdminView.vue\";\nimport AdminCategoryView from \"../views/AdminCategoryView.vue\";\nimport AdminTableView from \"../views/AdminTableView.vue\";\nVue.use(VueRouter);\nconst routes = [{\n  path: \"*\",\n  redirect: \"/\"\n}, {\n  path: \"/\",\n  name: \"register\",\n  component: RegisterView\n}, {\n  path: \"/home\",\n  name: \"home\",\n  component: TableView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/menu\",\n  name: \"menu\",\n  component: MenuView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/profile\",\n  name: \"profile\",\n  component: ProfileView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/order\",\n  name: \"order\",\n  component: OrderView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/admin/food\",\n  name: \"admin\",\n  component: AdminView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/user\",\n  name: \"userList\",\n  component: AdminUserView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/category\",\n  name: \"categorylist\",\n  component: AdminCategoryView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/table\",\n  name: \"tablelist\",\n  component: AdminTableView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}];\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  let isLogin = sessionStorage.getItem(\"isLogin\");\n  let loginUser = router.$store.state.loginUser;\n  this.$store.watch(() => {\n    return this.$store.state.loginUser;\n  }, newVal => {\n    this.loginUser = newVal;\n  }, {\n    deep: true\n  });\n  //let loginUserRole = this.loginUser.userRoles;\n  console.log(loginUser.userFullName);\n  //console.log(router.app.$store.getters.loginUser);\n  //console.log(loginUser.userRoles[0].roleName);\n  // console.log(isLogin);\n  // from - Home\n  // to - Profile\n  // Need to be login, But is not login\n  if (to.meta.requiresAuth == true && !isLogin) {\n    next({\n      path: \"/\"\n    });\n  }\n\n  // // Need to be login, Need to be admin\n  // else if (\n  //   to.meta.requiresAuth == true &&\n  //   to.meta.requiresAdmin == true &&\n  //   loginUser.userRoles[0].roleName === \"ADMIN\"\n  // ) {\n  //   next({ path: \"/home\" });\n  // }\n\n  // If All Okay\n  //scroll to top after every route change\n  else {\n    window.scrollTo(0, 0);\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","TableView","RegisterView","MenuView","OrderView","ProfileView","AdminUserView","AdminView","AdminCategoryView","AdminTableView","use","routes","path","redirect","name","component","meta","requiresAuth","requiresAdmin","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","isLogin","sessionStorage","getItem","loginUser","$store","state","watch","newVal","deep","console","log","userFullName","window","scrollTo"],"sources":["/Users/winmon/vue-bsCamp/VueHome/orderservice-frontend-v4/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport TableView from \"../views/TableView.vue\";\nimport RegisterView from \"../views/RegisterView.vue\";\nimport MenuView from \"../views/MenuView.vue\";\nimport OrderView from \"../views/OrderView.vue\";\nimport ProfileView from \"../views/ProfileView.vue\";\nimport AdminUserView from \"../views/AdminUserView.vue\";\nimport AdminView from \"../views/AdminView.vue\";\nimport AdminCategoryView from \"../views/AdminCategoryView.vue\";\nimport AdminTableView from \"../views/AdminTableView.vue\";\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: \"*\",\n    redirect: \"/\",\n  },\n  {\n    path: \"/\",\n    name: \"register\",\n    component: RegisterView,\n  },\n  {\n    path: \"/home\",\n    name: \"home\",\n    component: TableView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/menu\",\n    name: \"menu\",\n    component: MenuView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/profile\",\n    name: \"profile\",\n    component: ProfileView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/order\",\n    name: \"order\",\n    component: OrderView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/admin/food\",\n    name: \"admin\",\n    component: AdminView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/user\",\n    name: \"userList\",\n    component: AdminUserView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/category\",\n    name: \"categorylist\",\n    component: AdminCategoryView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/table\",\n    name: \"tablelist\",\n    component: AdminTableView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n];\n\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes,\n});\n\nrouter.beforeEach(async (to, from, next) => {\n  let isLogin = sessionStorage.getItem(\"isLogin\");\n  let loginUser = router.$store.state.loginUser;\n  this.$store.watch(\n    () => {\n      return this.$store.state.loginUser;\n    },\n    (newVal) => {\n      this.loginUser = newVal;\n    },\n    {\n      deep: true,\n    }\n  );\n  //let loginUserRole = this.loginUser.userRoles;\n  console.log(loginUser.userFullName);\n  //console.log(router.app.$store.getters.loginUser);\n  //console.log(loginUser.userRoles[0].roleName);\n  // console.log(isLogin);\n  // from - Home\n  // to - Profile\n  // Need to be login, But is not login\n  if (to.meta.requiresAuth == true && !isLogin) {\n    next({ path: \"/\" });\n  }\n\n  // // Need to be login, Need to be admin\n  // else if (\n  //   to.meta.requiresAuth == true &&\n  //   to.meta.requiresAdmin == true &&\n  //   loginUser.userRoles[0].roleName === \"ADMIN\"\n  // ) {\n  //   next({ path: \"/home\" });\n  // }\n\n  // If All Okay\n  //scroll to top after every route change\n  else {\n    window.scrollTo(0, 0);\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}