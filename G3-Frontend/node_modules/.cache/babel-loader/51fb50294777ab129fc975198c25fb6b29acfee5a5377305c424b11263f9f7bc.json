{"ast":null,"code":"const localDomain = \"http://localhost:8080\";\n\n//-------------------------------------------get----------------------------------------------\nasync function get(path) {\n  const resp = await fetch(localDomain + path, {\n    method: \"GET\"\n  });\n  return resp;\n}\nasync function post(path, body) {\n  try {\n    const resp = await fetch(localDomain + path, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    return resp;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n//-------------------------------------------update---------------------------------------------\nasync function update(path, body) {\n  const resp = await fetch(localDomain + path, {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  return resp;\n}\n\n//--------------------------------------------delete----------------------------------------------\nasync function remove(path, body) {\n  const resp = await fetch(localDomain + path, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  return resp;\n}\n//----------------------------------------------file----------------------------------------------\nasync function postMedia(path, file, fileType) {\n  let formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"fileType\", fileType);\n  const resp = await fetch(localDomain + path, {\n    method: \"POST\",\n    body: formData\n  });\n  return resp;\n}\nexport default {\n  get,\n  post,\n  remove,\n  update,\n  postMedia\n};","map":{"version":3,"names":["localDomain","get","path","resp","fetch","method","post","body","headers","JSON","stringify","error","console","log","update","remove","postMedia","file","fileType","formData","FormData","append"],"sources":["/Users/winmon/vue-bsCamp/VueHome/orderservice-frontend/src/util/api.js"],"sourcesContent":["const localDomain = \"http://localhost:8080\";\n\n//-------------------------------------------get----------------------------------------------\nasync function get(path) {\n  const resp = await fetch(localDomain + path, {\n    method: \"GET\",\n  });\n  return resp;\n}\nasync function post(path, body) {\n  try {\n    const resp = await fetch(localDomain + path, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n    return resp;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n//-------------------------------------------update---------------------------------------------\nasync function update(path, body) {\n  const resp = await fetch(localDomain + path, {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n  return resp;\n}\n\n//--------------------------------------------delete----------------------------------------------\nasync function remove(path, body) {\n  const resp = await fetch(\n    localDomain + path,\n\n    {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    }\n  );\n  return resp;\n}\n//----------------------------------------------file----------------------------------------------\nasync function postMedia(path, file, fileType) {\n  let formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"fileType\", fileType);\n  const resp = await fetch(localDomain + path, {\n    method: \"POST\",\n    body: formData,\n  });\n  return resp;\n}\n\nexport default {\n  get,\n  post,\n  remove,\n  update,\n  postMedia,\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,uBAAuB;;AAE3C;AACA,eAAeC,GAAG,CAACC,IAAI,EAAE;EACvB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACJ,WAAW,GAAGE,IAAI,EAAE;IAC3CG,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOF,IAAI;AACb;AACA,eAAeG,IAAI,CAACJ,IAAI,EAAEK,IAAI,EAAE;EAC9B,IAAI;IACF,MAAMJ,IAAI,GAAG,MAAMC,KAAK,CAACJ,WAAW,GAAGE,IAAI,EAAE;MAC3CG,MAAM,EAAE,MAAM;MACdG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDD,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACH,IAAI;IAC3B,CAAC,CAAC;IACF,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,IAAI;EACb;AACF;AACA;AACA,eAAeG,MAAM,CAACZ,IAAI,EAAEK,IAAI,EAAE;EAChC,MAAMJ,IAAI,GAAG,MAAMC,KAAK,CAACJ,WAAW,GAAGE,IAAI,EAAE;IAC3CG,MAAM,EAAE,KAAK;IACbG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDD,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOJ,IAAI;AACb;;AAEA;AACA,eAAeY,MAAM,CAACb,IAAI,EAAEK,IAAI,EAAE;EAChC,MAAMJ,IAAI,GAAG,MAAMC,KAAK,CACtBJ,WAAW,GAAGE,IAAI,EAElB;IACEG,MAAM,EAAE,QAAQ;IAChBG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDD,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,CACF;EACD,OAAOJ,IAAI;AACb;AACA;AACA,eAAea,SAAS,CAACd,IAAI,EAAEe,IAAI,EAAEC,QAAQ,EAAE;EAC7C,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EAC7BE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;EACrC,MAAMf,IAAI,GAAG,MAAMC,KAAK,CAACJ,WAAW,GAAGE,IAAI,EAAE;IAC3CG,MAAM,EAAE,MAAM;IACdE,IAAI,EAAEY;EACR,CAAC,CAAC;EACF,OAAOhB,IAAI;AACb;AAEA,eAAe;EACbF,GAAG;EACHK,IAAI;EACJS,MAAM;EACND,MAAM;EACNE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}