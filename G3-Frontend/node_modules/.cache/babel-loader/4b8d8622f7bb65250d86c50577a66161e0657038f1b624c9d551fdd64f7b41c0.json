{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"AdminView\",\n  components: {\n    AdminSideBar\n  },\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [{\n      text: \"Dessert (100g serving)\",\n      align: \"start\",\n      sortable: false,\n      value: \"name\"\n    }, {\n      text: \"Calories\",\n      value: \"calories\"\n    }, {\n      text: \"Fat (g)\",\n      value: \"fat\"\n    }, {\n      text: \"Carbs (g)\",\n      value: \"carbs\"\n    }, {\n      text: \"Protein (g)\",\n      value: \"protein\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0\n    },\n    defaultItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0\n    }\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  created() {\n    this.initialize();\n  },\n  methods: {\n    initialize() {\n      this.desserts = [{\n        name: \"Frozen Yogurt\",\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0\n      }, {\n        name: \"Ice cream sandwich\",\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3\n      }, {\n        name: \"Eclair\",\n        calories: 262,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0\n      }, {\n        name: \"Cupcake\",\n        calories: 305,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3\n      }, {\n        name: \"Gingerbread\",\n        calories: 356,\n        fat: 16.0,\n        carbs: 49,\n        protein: 3.9\n      }, {\n        name: \"Jelly bean\",\n        calories: 375,\n        fat: 0.0,\n        carbs: 94,\n        protein: 0.0\n      }, {\n        name: \"Lollipop\",\n        calories: 392,\n        fat: 0.2,\n        carbs: 98,\n        protein: 0\n      }, {\n        name: \"Honeycomb\",\n        calories: 408,\n        fat: 3.2,\n        carbs: 87,\n        protein: 6.5\n      }, {\n        name: \"Donut\",\n        calories: 452,\n        fat: 25.0,\n        carbs: 51,\n        protein: 4.9\n      }, {\n        name: \"KitKat\",\n        calories: 518,\n        fat: 26.0,\n        carbs: 65,\n        protein: 7\n      }];\n    },\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    }\n  }\n};","map":{"version":3,"mappings":";AA6BA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,EACA;IACAE;IACAC;IACAC;MACAb;MACAc;MACAC;MACAC;MACAC;IACA;IACAC;MACAlB;MACAc;MACAC;MACAC;MACAC;IACA;EACA;EAEAE;IACAC;MACA;IACA;EACA;EAEAC;IACAjB;MACAkB;IACA;IACAjB;MACAiB;IACA;EACA;EAEAC;IACA;EACA;EAEAC;IACAC;MACA,iBACA;QACAzB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAc;QACAC;QACAC;QACAC;MACA,EACA;IACA;IAEAS;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;QACAC;MACA;QACA;MACA;MACA;IACA;EACA;AACA","names":["name","components","AdminSideBar","data","dialog","dialogDelete","headers","text","align","sortable","value","desserts","editedIndex","editedItem","calories","fat","carbs","protein","defaultItem","computed","formTitle","watch","val","created","methods","initialize","editItem","deleteItem","deleteItemConfirm","close","closeDelete","save","Object"],"sourceRoot":"src/views","sources":["AdminView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <admin-side-bar></admin-side-bar>\n    <template>\n      <v-card>\n        <v-card-title>\n          <v-toolbar-title><strong>My CRUD</strong></v-toolbar-title>\n          <v-divider class=\"mx-4\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <v-text-field\n            v-model=\"search\"\n            append-icon=\"mdi-magnify\"\n            label=\"Search\"\n            single-line\n            hide-details\n          ></v-text-field>\n        </v-card-title>\n        <v-data-table :headers=\"headers\" :items=\"orders\" :search=\"search\">\n          <template v-slot:[`item.status`]=\"{ item }\">\n            <v-chip :color=\"getColor(item.status)\" dark>\n              {{ item.status }}\n            </v-chip>\n          </template>\n        </v-data-table>\n      </v-card>\n    </template>\n  </v-app>\n</template>\n<script>\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"AdminView\",\n  components: {\n    AdminSideBar,\n  },\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      {\n        text: \"Dessert (100g serving)\",\n        align: \"start\",\n        sortable: false,\n        value: \"name\",\n      },\n      { text: \"Calories\", value: \"calories\" },\n      { text: \"Fat (g)\", value: \"fat\" },\n      { text: \"Carbs (g)\", value: \"carbs\" },\n      { text: \"Protein (g)\", value: \"protein\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0,\n    },\n    defaultItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0,\n    },\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    },\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    initialize() {\n      this.desserts = [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0,\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3,\n        },\n        {\n          name: \"Eclair\",\n          calories: 262,\n          fat: 16.0,\n          carbs: 23,\n          protein: 6.0,\n        },\n        {\n          name: \"Cupcake\",\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3,\n        },\n        {\n          name: \"Gingerbread\",\n          calories: 356,\n          fat: 16.0,\n          carbs: 49,\n          protein: 3.9,\n        },\n        {\n          name: \"Jelly bean\",\n          calories: 375,\n          fat: 0.0,\n          carbs: 94,\n          protein: 0.0,\n        },\n        {\n          name: \"Lollipop\",\n          calories: 392,\n          fat: 0.2,\n          carbs: 98,\n          protein: 0,\n        },\n        {\n          name: \"Honeycomb\",\n          calories: 408,\n          fat: 3.2,\n          carbs: 87,\n          protein: 6.5,\n        },\n        {\n          name: \"Donut\",\n          calories: 452,\n          fat: 25.0,\n          carbs: 51,\n          protein: 4.9,\n        },\n        {\n          name: \"KitKat\",\n          calories: 518,\n          fat: 26.0,\n          carbs: 65,\n          protein: 7,\n        },\n      ];\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n  },\n};\n</script>\n\n<style>\n.v-btn:hover {\n  background-color: #800015 !important;\n  color: #ffffff !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}