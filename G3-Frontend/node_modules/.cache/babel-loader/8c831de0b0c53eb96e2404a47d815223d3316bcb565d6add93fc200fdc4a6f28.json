{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport TableView from \"../views/TableView.vue\";\nimport LoginView from \"../views/ LoginView.vue\";\nimport MenuView from \"../views/MenuView.vue\";\nimport OrderView from \"../views/OrderView.vue\";\nimport OrderDetail from \"../views/OrderDetail.vue\";\nimport ProfileView from \"../views/ProfileView.vue\";\nimport AdminUserView from \"../views/AdminUserView.vue\";\nimport AdminView from \"../views/AdminView.vue\";\nimport AdminCategoryView from \"../views/AdminCategoryView.vue\";\nimport AdminTableView from \"../views/AdminTableView.vue\";\nVue.use(VueRouter);\nconst routes = [{\n  path: \"*\",\n  redirect: \"/login\"\n}, {\n  path: \"/login\",\n  name: \"login\",\n  component: LoginView\n}, {\n  path: \"/table\",\n  name: \"table\",\n  component: TableView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/menu\",\n  name: \"menu\",\n  component: MenuView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/profile\",\n  name: \"profile\",\n  component: ProfileView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/order\",\n  name: \"order\",\n  component: OrderView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/order/:orderId\",\n  name: \"order_detail\",\n  props: true,\n  component: OrderDetail,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/admin/food\",\n  name: \"admin_food\",\n  component: AdminView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/user\",\n  name: \"admin_user\",\n  component: AdminUserView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/category\",\n  name: \"admin_category\",\n  component: AdminCategoryView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/table\",\n  name: \"admin_table\",\n  component: AdminTableView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}];\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  //let loginUser = sessionStorage.getItem(\"loginUser\");\n  let isLogin = sessionStorage.getItem(\"isLogin\");\n\n  // from - Home\n  // to - Profile\n  // Need to be login, But is not login\n  if (to.meta.requiresAuth == true && !isLogin) {\n    next({\n      path: \"/\"\n    });\n  }\n\n  // // Need to be login, Need to be admin\n  // else if (\n  //   to.meta.requiresAuth == true &&\n  //   to.meta.requiresAdmin == true &&\n  //   loginUser.roleName != \"ADMIN\"\n  // ) {\n  //   next({ path: \"/home\" });\n  // }\n\n  // If All Okay\n  //scroll to top after every route change\n  else {\n    window.scrollTo(0, 0);\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","TableView","LoginView","MenuView","OrderView","OrderDetail","ProfileView","AdminUserView","AdminView","AdminCategoryView","AdminTableView","use","routes","path","redirect","name","component","meta","requiresAuth","props","requiresAdmin","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","isLogin","sessionStorage","getItem","window","scrollTo"],"sources":["/Users/winmon/vue-bsCamp/VueHome/orderservice-frontend-v5/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport TableView from \"../views/TableView.vue\";\nimport LoginView from \"../views/ LoginView.vue\";\nimport MenuView from \"../views/MenuView.vue\";\nimport OrderView from \"../views/OrderView.vue\";\nimport OrderDetail from \"../views/OrderDetail.vue\";\nimport ProfileView from \"../views/ProfileView.vue\";\nimport AdminUserView from \"../views/AdminUserView.vue\";\nimport AdminView from \"../views/AdminView.vue\";\nimport AdminCategoryView from \"../views/AdminCategoryView.vue\";\nimport AdminTableView from \"../views/AdminTableView.vue\";\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: \"*\",\n    redirect: \"/login\",\n  },\n  {\n    path: \"/login\",\n    name: \"login\",\n    component: LoginView,\n  },\n  {\n    path: \"/table\",\n    name: \"table\",\n    component: TableView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/menu\",\n    name: \"menu\",\n    component: MenuView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/profile\",\n    name: \"profile\",\n    component: ProfileView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/order\",\n    name: \"order\",\n    component: OrderView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/order/:orderId\",\n    name: \"order_detail\",\n    props: true,\n    component: OrderDetail,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/admin/food\",\n    name: \"admin_food\",\n    component: AdminView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/user\",\n    name: \"admin_user\",\n    component: AdminUserView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/category\",\n    name: \"admin_category\",\n    component: AdminCategoryView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/table\",\n    name: \"admin_table\",\n    component: AdminTableView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n];\n\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes,\n});\n\nrouter.beforeEach(async (to, from, next) => {\n  //let loginUser = sessionStorage.getItem(\"loginUser\");\n  let isLogin = sessionStorage.getItem(\"isLogin\");\n\n  // from - Home\n  // to - Profile\n  // Need to be login, But is not login\n  if (to.meta.requiresAuth == true && !isLogin) {\n    next({ path: \"/\" });\n  }\n\n  // // Need to be login, Need to be admin\n  // else if (\n  //   to.meta.requiresAuth == true &&\n  //   to.meta.requiresAdmin == true &&\n  //   loginUser.roleName != \"ADMIN\"\n  // ) {\n  //   next({ path: \"/home\" });\n  // }\n\n  // If All Okay\n  //scroll to top after every route change\n  else {\n    window.scrollTo(0, 0);\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}