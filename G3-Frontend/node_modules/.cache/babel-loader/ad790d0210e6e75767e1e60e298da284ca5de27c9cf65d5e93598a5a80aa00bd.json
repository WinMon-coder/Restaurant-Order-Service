{"ast":null,"code":"import SideBar from \"../components/SideBar\";\nimport SideBarRight from \"../components/SideBarRight\";\nimport utils from \"@/utils/utils\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    SideBar,\n    SideBarRight\n  },\n  data() {\n    return {\n      localDomain: utils.constant.localDomain,\n      categoryList: [],\n      foodList: [],\n      // orderByTableAndStatusList: [],\n      searchFoodName: \"\"\n    };\n  },\n  mounted() {\n    this.$store.dispatch(\"getAllFoods\");\n    //this.$store.dispatch(\"getFood\", this.foodId);\n  },\n\n  computed: {\n    filterFoods: function () {\n      return this.foodList.filter(foods => {\n        return foods.foodName.match(this.searchFoodName);\n      });\n    },\n    foods() {\n      return this.$store.state.foods;\n    },\n    // food() {\n    //   return this.$store.state.food;\n    // },\n\n    ...mapGetters([\"getTable\"])\n  },\n  async created() {\n    await this.fetchAllCategories();\n    await this.fetchAllFoods();\n    // await this.fetchOrderByTableAndStatus();\n  },\n\n  methods: {\n    addToOrder(food) {\n      this.$store.dispatch(\"addFoodToOrder\", {\n        food: food,\n        quantity: 1\n      });\n    },\n    async fetchAllCategories() {\n      const response = await utils.http.get(\"/category/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.categoryList = data;\n      }\n    },\n    async fetchAllFoods() {\n      const response = await utils.http.get(\"/food/list_with_avaliable\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.foodList = data;\n      }\n    },\n    async onClickCategory(category) {\n      const response = await utils.http.get(\"/food/category/\" + category.categoryId);\n      if (response.status === 200) {\n        const data = await response.json();\n        if (data) {\n          this.foodList = data;\n        }\n      }\n    },\n    async onClickAllCategories() {\n      const response = await utils.http.get(\"/food/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.foodList = data;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkNA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACAC;IACAC;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;MACA;MACAC;IACA;EACA;EAEAC;IACA;IACA;EACA;;EAEAC;IACAC;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACA;IACA;IACA;;IAEA;EACA;EAEA;IACA;IACA;IACA;EACA;;EACAC;IACAC;MACA;QACAC;QACAC;MACA;IACA;IAEA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;MACA,sCACA,wCACA;MACA;QACA;QACA;UACA;QACA;MACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["name","components","SideBar","SideBarRight","data","localDomain","categoryList","foodList","searchFoodName","mounted","computed","filterFoods","foods","methods","addToOrder","food","quantity"],"sourceRoot":"src/views","sources":["MenuView.vue"],"sourcesContent":["<template>\n  <v-app :style=\"{ background: $vuetify.theme.themes.dark.background }\">\n    <SideBar />\n    <side-bar-right :foods=\"foods\"></side-bar-right>\n    <v-container>\n      <v-toolbar color=\"rgba(0,0,0,0)\" flat>\n        <!-- ---------------------------- Label For Category ---------------------------- -->\n        <v-toolbar-title class=\"mt-n3\">Choose Category</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- ---------------------------- Category Search Bar ---------------------------- -->\n        <v-text-field\n          v-model=\"searchFoodName\"\n          label=\"Search category or menu...\"\n          class=\"mt-5\"\n          color=\"primary\"\n          filled\n          append-icon=\"mdi-magnify\"\n          dense\n          solo\n          flat\n          background-color=\"grey lighten-4\"\n        ></v-text-field>\n        <!-- ---------------------------- End Category Search Bar ---------------------------- -->\n      </v-toolbar>\n      <!-- ---------------------------- Category Menu ---------------------------- -->\n      <v-item-group mandatory class=\"mt-n1\">\n        <v-container>\n          <v-row justify=\"center\" class=\"space\">\n            <!-- ---------------------------- For All Category ---------------------------- -->\n\n            <v-col cols=\"12\" sm=\"2\" @click=\"onClickAllCategories()\">\n              <v-item v-slot=\"{ active, toggle }\">\n                <v-card\n                  :color=\"active ? '#F6EFEF' : 'white'\"\n                  :class=\"active ? 'borderme' : 'borderout'\"\n                  class=\"d-flex align-center rounded-lg mx-2\"\n                  dark\n                  height=\"50\"\n                  @click=\"toggle\"\n                >\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"12\">\n                      <div\n                        tabindex=\"-1\"\n                        class=\"v-list-item v-list-item--three-line theme--light\"\n                      >\n                        <div>\n                          <v-list-item-avatar>\n                            <v-img\n                              rounded\n                              src=\"c1.png\"\n                              max-height=\"60\"\n                              max-width=\"100\"\n                              flex\n                            ></v-img>\n                          </v-list-item-avatar>\n                        </div>\n                        <v-list-item-title>\n                          <div align=\"center\" justify=\"center\"></div>\n                          <v-list-item-subtitle\n                            :class=\"active ? 'primary--text' : 'black--text'\"\n                            class=\"caption text-uppercase\"\n                            >All</v-list-item-subtitle\n                          >\n                        </v-list-item-title>\n                      </div>\n                    </v-col>\n                  </v-row>\n                </v-card>\n              </v-item>\n            </v-col>\n            <!-- ----------------------------End For All Category ---------------------------- -->\n\n            <!-- ---------------------------- Category Items ---------------------------- -->\n            <v-col\n              cols=\"12\"\n              sm=\"2\"\n              v-for=\"(category, index) in categoryList\"\n              :key=\"index\"\n              @click=\"onClickCategory(category)\"\n            >\n              <v-item v-slot=\"{ active, toggle }\">\n                <v-card\n                  :color=\"active ? '#F6EFEF' : 'white'\"\n                  :class=\"active ? 'borderme' : 'borderout'\"\n                  class=\"d-flex align-center rounded-lg mx-2\"\n                  dark\n                  height=\"50\"\n                  @click=\"toggle\"\n                >\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"12\">\n                      <div\n                        tabindex=\"-1\"\n                        class=\"v-list-item v-list-item--three-line theme--light\"\n                      >\n                        <div>\n                          <v-list-item-avatar>\n                            <v-img\n                              rounded\n                              :src=\"localDomain + category.categoryPhoto\"\n                              max-height=\"60\"\n                              max-width=\"100\"\n                              flex\n                            ></v-img>\n                          </v-list-item-avatar>\n                        </div>\n                        <v-list-item-title>\n                          <div align=\"center\" justify=\"center\"></div>\n                          <v-list-item-subtitle\n                            :class=\"active ? 'primary--text' : 'black--text'\"\n                            class=\"caption text-uppercase\"\n                            >{{ category.categoryName }}</v-list-item-subtitle\n                          >\n                        </v-list-item-title>\n                      </div>\n                    </v-col>\n                  </v-row>\n                </v-card>\n              </v-item>\n            </v-col>\n\n            <!-- ---------------------------- End Category Items ---------------------------- -->\n          </v-row>\n        </v-container>\n      </v-item-group>\n\n      <!-- ---------------------------- Label For Item List By Category ---------------------------- -->\n      <v-toolbar color=\"#EEEEEE\" flat>\n        <v-toolbar-title>Our Menu </v-toolbar-title><v-spacer></v-spacer\n        ><span color=\"grey\"></span>\n      </v-toolbar>\n      <!-- ---------------------------- Show Item List By Category ---------------------------- -->\n      <v-item-group mandatory class=\"mt-n1\">\n        <v-container>\n          <v-row justify=\"center\" class=\"space\">\n            <!-- ---------------------------- Item List ---------------------------- -->\n\n            <template>\n              <v-item v-slot=\"{ active, toggle }\">\n                <v-card\n                  max-width=\"180\"\n                  :color=\"active ? '#F6EFEF' : 'white'\"\n                  :class=\"active ? 'borderme' : 'borderout'\"\n                  class=\"align-center rounded-lg mx-2 mx-auto\"\n                  dark\n                  height=\"300\"\n                  @click=\"toggle\"\n                >\n                  <v-img\n                    src=\"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\"\n                  ></v-img>\n\n                  <v-card-title> Top western road trips </v-card-title>\n\n                  <v-card-actions>\n                    <strong>Hello</strong>\n                  </v-card-actions>\n                </v-card>\n              </v-item>\n            </template>\n            <v-col\n              cols=\"12\"\n              md=\"2\"\n              v-for=\"food in filterFoods\"\n              :key=\"food.foodId\"\n            >\n              <v-item v-slot=\"{ active, toggle }\">\n                <v-card\n                  :color=\"active ? '#F6EFEF' : 'white'\"\n                  :class=\"active ? 'borderme' : 'borderout'\"\n                  class=\"d-flex align-center rounded-lg mx-2\"\n                  dark\n                  height=\"150\"\n                  @click=\"toggle\"\n                >\n                  <v-list-item\n                    three-line\n                    class=\"text-center\"\n                    @click=\"addToOrder(food)\"\n                  >\n                    <v-list-item-content>\n                      <v-img\n                        :src=\"localDomain + food.foodPhoto\"\n                        max-height=\"90\"\n                        max-width=\"180\"\n                        flex\n                      ></v-img>\n\n                      <v-list-item-subtitle\n                        :class=\"active ? 'primary--text' : 'black--text'\"\n                        class=\"caption text-uppercase\"\n                        >{{ food.foodName }} <br /><strong\n                          >{{ food.foodPrice }} Ks</strong\n                        ></v-list-item-subtitle\n                      >\n                    </v-list-item-content>\n                  </v-list-item>\n                </v-card>\n              </v-item>\n            </v-col>\n            <!-- ----------------------------End Item List ---------------------------- -->\n          </v-row>\n        </v-container>\n      </v-item-group>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport SideBar from \"../components/SideBar\";\nimport SideBarRight from \"../components/SideBarRight\";\nimport utils from \"@/utils/utils\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    SideBar,\n    SideBarRight,\n  },\n\n  data() {\n    return {\n      localDomain: utils.constant.localDomain,\n      categoryList: [],\n      foodList: [],\n      // orderByTableAndStatusList: [],\n      searchFoodName: \"\",\n    };\n  },\n\n  mounted() {\n    this.$store.dispatch(\"getAllFoods\");\n    //this.$store.dispatch(\"getFood\", this.foodId);\n  },\n\n  computed: {\n    filterFoods: function () {\n      return this.foodList.filter((foods) => {\n        return foods.foodName.match(this.searchFoodName);\n      });\n    },\n    foods() {\n      return this.$store.state.foods;\n    },\n    // food() {\n    //   return this.$store.state.food;\n    // },\n\n    ...mapGetters([\"getTable\"]),\n  },\n\n  async created() {\n    await this.fetchAllCategories();\n    await this.fetchAllFoods();\n    // await this.fetchOrderByTableAndStatus();\n  },\n  methods: {\n    addToOrder(food) {\n      this.$store.dispatch(\"addFoodToOrder\", {\n        food: food,\n        quantity: 1,\n      });\n    },\n\n    async fetchAllCategories() {\n      const response = await utils.http.get(\"/category/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.categoryList = data;\n      }\n    },\n    async fetchAllFoods() {\n      const response = await utils.http.get(\"/food/list_with_avaliable\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.foodList = data;\n      }\n    },\n    async onClickCategory(category) {\n      const response = await utils.http.get(\n        \"/food/category/\" + category.categoryId\n      );\n      if (response.status === 200) {\n        const data = await response.json();\n        if (data) {\n          this.foodList = data;\n        }\n      }\n    },\n    async onClickAllCategories() {\n      const response = await utils.http.get(\"/food/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.foodList = data;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}