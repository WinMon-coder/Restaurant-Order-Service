{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SideBar from \"@/components/SideBar.vue\";\nexport default {\n  name: \"AdminCategoryView\",\n  components: {\n    SideBar\n  },\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [{\n      text: \"Dessert (100g serving)\",\n      align: \"start\",\n      sortable: false,\n      value: \"name\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      name: \"\"\n    },\n    defaultItem: {\n      name: \"\"\n    }\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  created() {\n    this.initialize();\n  },\n  methods: {\n    initialize() {\n      this.desserts = [{\n        name: \"Frozen Yogurt\"\n      }, {\n        name: \"Ice cream sandwich\"\n      }];\n    },\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    }\n  }\n};","map":{"version":3,"mappings":";AAgHA;AACA;EACAA;EACAC;IACAC;EACA;EAEAC;IACAC;IACAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GAEA;MAAAH;MAAAG;MAAAD;IAAA,EACA;IACAE;IACAC;IACAC;MACAb;IACA;IACAc;MACAd;IACA;EACA;EAEAe;IACAC;MACA;IACA;EACA;EAEAC;IACAb;MACAc;IACA;IACAb;MACAa;IACA;EACA;EAEAC;IACA;EACA;EAEAC;IACAC;MACA,iBACA;QACArB;MACA,GACA;QACAA;MACA,EACA;IACA;IAEAsB;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;QACAC;MACA;QACA;MACA;MACA;IACA;EACA;AACA","names":["name","components","SideBar","data","dialog","dialogDelete","headers","text","align","sortable","value","desserts","editedIndex","editedItem","defaultItem","computed","formTitle","watch","val","created","methods","initialize","editItem","deleteItem","deleteItemConfirm","close","closeDelete","save","Object"],"sourceRoot":"src/views","sources":["AdminCategoryView.vue"],"sourcesContent":["<template>\n  <div>\n    <SideBar />\n\n    <template>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"desserts\"\n        sort-by=\"calories\"\n        class=\"elevation-1\"\n      >\n        <template v-slot:top>\n          <v-toolbar flat>\n            <v-toolbar-title>My CRUD</v-toolbar-title>\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\n            <v-spacer></v-spacer>\n            <v-dialog v-model=\"dialog\" max-width=\"500px\">\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  color=\"primary\"\n                  dark\n                  class=\"mb-2\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                >\n                  New Item\n                </v-btn>\n              </template>\n              <v-card>\n                <v-card-title>\n                  <span class=\"text-h5\">{{ formTitle }}</span>\n                </v-card-title>\n\n                <v-card-text>\n                  <v-container>\n                    <v-row>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedItem.name\"\n                          label=\"Dessert name\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedItem.calories\"\n                          label=\"Calories\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedItem.fat\"\n                          label=\"Fat (g)\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedItem.carbs\"\n                          label=\"Carbs (g)\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedItem.protein\"\n                          label=\"Protein (g)\"\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                  </v-container>\n                </v-card-text>\n\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"close\">\n                    Cancel\n                  </v-btn>\n                  <v-btn color=\"blue darken-1\" text @click=\"save\"> Save </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n            <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n              <v-card>\n                <v-card-title class=\"text-h5\"\n                  >Are you sure you want to delete this item?</v-card-title\n                >\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                    >Cancel</v-btn\n                  >\n                  <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                    >OK</v-btn\n                  >\n                  <v-spacer></v-spacer>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </v-toolbar>\n        </template>\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-icon small class=\"mr-2\" @click=\"editItem(item)\">\n            mdi-pencil\n          </v-icon>\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n        </template>\n        <template v-slot:no-data>\n          <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\n        </template>\n      </v-data-table>\n    </template>\n  </div>\n</template>\n<script>\nimport SideBar from \"@/components/SideBar.vue\";\nexport default {\n  name: \"AdminCategoryView\",\n  components: {\n    SideBar,\n  },\n\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      {\n        text: \"Dessert (100g serving)\",\n        align: \"start\",\n        sortable: false,\n        value: \"name\",\n      },\n\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      name: \"\",\n    },\n    defaultItem: {\n      name: \"\",\n    },\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    },\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    initialize() {\n      this.desserts = [\n        {\n          name: \"Frozen Yogurt\",\n        },\n        {\n          name: \"Ice cream sandwich\",\n        },\n      ];\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n  },\n};\n</script>\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}