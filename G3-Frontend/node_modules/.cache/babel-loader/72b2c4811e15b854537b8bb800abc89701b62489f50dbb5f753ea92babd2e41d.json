{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"@/util/api\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"CategoryView\",\n  components: {\n    AdminSideBar\n  },\n  data: () => ({\n    localDomain: api,\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    loading: false,\n    errorAlert: false,\n    poster: null,\n    posterPreviewPath: null,\n    posterPath: \"\",\n    selectDemo: {},\n    updateDemo: {},\n    headers: [{\n      text: \"id\",\n      align: \"start\",\n      sortable: false,\n      value: \"categoryId\"\n    }, {\n      text: \"Table\",\n      value: \"categoryName\"\n    }, {\n      text: \"Poster\",\n      value: \"posterPath\",\n      sortable: false\n    }, {\n      text: \"Created Time\",\n      value: \"createdAt\"\n    }, {\n      text: \"Modified Time\",\n      value: \"updatedAt\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    categoryList: [],\n    newItem: {\n      categoryName: \"\",\n      categoryPhoto: \"\"\n    }\n  }),\n  async created() {\n    await this.fetchAllCategories();\n  },\n  methods: {\n    // <!-- -------------****** get all table from api ******-------------------------- -->\n    async fetchAllCategories() {\n      const response = await api.get(\"/category/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.categoryList = data;\n      }\n    },\n    // <!-- -------------****** save Category from api ******-------------------------- -->\n\n    async save() {\n      if (this.$refs.createCategoryForm.validate()) {\n        this.errorAlert = false;\n        const respPoster = await api.postMedia(\"/admin/file/create\", this.poster, this.poster.type);\n        let respPosterData = null;\n        if (respPoster.status === 200) {\n          respPosterData = await respPoster.text();\n          //console.log(this.respPosterData);\n        } else {\n          this.errorAlert = true;\n        }\n        if (respPosterData) {\n          // Create Category API\n          const resp = await api.save(\"/category/create\", {\n            categoryName: this.newItem.categoryName,\n            categoryPhoto: respPosterData\n          });\n          if (resp) {\n            await this.fetchAllCategories();\n            this.dialog = false;\n            this.newItem = {};\n            this.poster = null;\n            this.respPosterData = null;\n            this.posterPreviewPath = null;\n          }\n          if (resp && resp.status === 200) {\n            this.$router.push({\n              path: \"admin/category\"\n            });\n          }\n        }\n        this.loading = false;\n      }\n    },\n    // <!-- -------------****** update table from api ******-------------------------- -->\n    async updateItemConfirm(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      let posterPath = this.updateDemo.posterPath;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster API\n        const respPoster = await api.putMedia(\"/admin/file/update\", this.updateDemo.poster, this.updateDemo.poster.type, this.updateDemo.posterPath);\n        if (respPoster && respPoster.status === 200) {\n          posterPath = await respPoster.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await api.update(\"/category/update/\" + id, {\n        categoryName: this.updateDemo.categoryName,\n        categoryPhoto: posterPath\n      });\n      if (resp) {\n        await this.fetchAllCategories();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from api ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await api.remove(\"/category/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllCategories();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      // Copy Object\n      this.updateDemo = Object.assign({}, item);\n      this.poster = null;\n      this.posterPreviewPath = null;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    }\n  }\n};","map":{"version":3,"mappings":";AA6MA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,EACA;IACAE;IACAC;MACAC;MACAC;IACA;EACA;EAEA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;;IAEA;MACA;QACA;QACA,uCACA,sBACA,aACA,iBACA;QACA;QAEA;UACAC;UACA;QACA;UACA;QACA;QACA;UACA;UACA;YACAH;YACAC;UACA;UACA;YACA;YACA;YACA;YACA;YACA;YACA;UACA;UACA;YACA;cAAAG;YAAA;UACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;MACA;;MAEA;MACA;MACA;QACA;QACA,sCACA,sBACA,wBACA,6BACA,2BACA;QAEA;UACAd;QACA;UACAe;QACA;MACA;MACA;QACAL;QACAC;MACA;MACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACAK;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","AdminSideBar","data","localDomain","dialog","update_dialog","delete_dialog","loading","errorAlert","poster","posterPreviewPath","posterPath","selectDemo","updateDemo","headers","text","align","sortable","value","categoryList","newItem","categoryName","categoryPhoto","methods","respPosterData","path","console","onChangePoster","deleteItem","editItem","closeUpdate","closeDelete","saveCancel"],"sourceRoot":"src/views","sources":["AdminCategoryView.vue"],"sourcesContent":["<template>\n  <div>\n    <AdminSideBar />\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"categoryList\"\n      :items-per-page=\"5\"\n      class=\"elevation-1\"\n    >\n      <!-- Poster Img -->\n      <template v-slot:[`item.posterPath`]=\"{ item }\">\n        <v-img\n          :src=\"localDomain + item.categoryPhoto\"\n          width=\"150\"\n          height=\"150\"\n          contain\n        ></v-img>\n      </template>\n      <template v-slot:top>\n        <v-toolbar flat>\n          <!-- -------------****** create ******-------------------------- -->\n          <v-dialog v-model=\"dialog\" max-width=\"400px\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n                Add New Category\n              </v-btn>\n            </template>\n            <template\n              ><v-form ref=\"createCategoryForm\" v-model=\"createCategoryForm\">\n                <v-card>\n                  <v-card-title>\n                    <span class=\"text-h4\">Add New Category</span>\n                  </v-card-title>\n                  <v-card-text>\n                    <v-container>\n                      <v-row>\n                        <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                          <v-text-field\n                            v-model=\"newItem.categoryName\"\n                            :rules=\"[\n                              (v) => !!v || 'Required',\n                              (v) =>\n                                (v && v.length <= 50) ||\n                                'Title must be less than 50 characters',\n                            ]\"\n                            label=\"Category Name\"\n                          ></v-text-field>\n                        </v-col>\n                        <v-col cols=\"12\" sm=\"6\">\n                          <!-- Poster -->\n                          <v-file-input\n                            v-model=\"poster\"\n                            label=\"Poster\"\n                            show-size\n                            prepend-icon=\"mdi-camera\"\n                            placeholder=\"Choose Poster Image\"\n                            accept=\"image/png, image/jpeg\"\n                            :rules=\"[\n                              (v) => !!v || 'Required',\n                              (v) =>\n                                !v ||\n                                v.size < 10000000 ||\n                                'Image size should be less than 10 MB!',\n                            ]\"\n                            @change=\"onChangePoster\"\n                          ></v-file-input>\n                        </v-col>\n                      </v-row>\n                      <v-row>\n                        <!-- Poster Preview -->\n                        <v-img\n                          v-if=\"posterPreviewPath != null\"\n                          :src=\"posterPreviewPath\"\n                          width=\"200\"\n                          height=\"150\"\n                          contain\n                        >\n                        </v-img\n                      ></v-row>\n                    </v-container>\n                  </v-card-text>\n                  <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn text @click=\"saveCancel\">Cancle </v-btn>\n                    <v-btn text @click=\"save\"\n                      ><span v-if=\"!loading\">Save</span>\n                      <v-progress-circular\n                        v-else\n                        indeterminate\n                        color=\"primary\"\n                      ></v-progress-circular\n                    ></v-btn>\n                  </v-card-actions>\n                  <v-alert class=\"mt-3\" v-show=\"errorAlert\" dense type=\"error\">\n                    Create Category Failed!\n                  </v-alert>\n                </v-card>\n                <!-- Error Alert For Category -->\n              </v-form></template\n            >\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon class=\"mr-2\" @click=\"editItem(item)\"> mdi-pencil </v-icon>\n        <v-icon @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n      </template>\n    </v-data-table>\n    <v-toolbar>\n      <!-- -------------****** update ******-------------------------- -->\n      <v-dialog v-model=\"update_dialog\" max-width=\"400px\">\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h4\">Edit Category</span>\n          </v-card-title>\n          <v-card-text>\n            <v-container>\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                  <v-text-field\n                    v-model=\"updateDemo.categoryName\"\n                    :rules=\"[\n                      (v) => !!v || 'Required',\n                      (v) =>\n                        (v && v.length <= 50) ||\n                        'Title must be less than 50 characters',\n                    ]\"\n                    label=\"Category Name\"\n                  ></v-text-field>\n                </v-col>\n                <!-- -------------****** poster start ******-------------------------- -->\n                <v-col cols=\"12\" sm=\"6\">\n                  <v-file-input\n                    v-model=\"updateDemo.poster\"\n                    label=\"Poster\"\n                    show-size\n                    prepend-icon=\"mdi-camera\"\n                    placeholder=\"Choose Poster Image\"\n                    accept=\"image/png, image/jpeg\"\n                    :rules=\"[\n                      (v) => !!v || 'Required',\n                      (v) =>\n                        !v ||\n                        v.size < 10000000 ||\n                        'Image size should be less than 10 MB!',\n                    ]\"\n                    @change=\"onChangePoster\"\n                  ></v-file-input>\n                </v-col>\n              </v-row>\n              <v-row>\n                <!-- Poster is not selected (null) -->\n                <v-img\n                  v-if=\"posterPreviewPath == null\"\n                  :src=\"localDomain + updateDemo.categoryPhoto\"\n                  width=\"200\"\n                  height=\"150\"\n                  contain\n                >\n                </v-img>\n                <!-- Poster is selected (not null) -->\n                <v-img\n                  v-if=\"posterPreviewPath != null\"\n                  :src=\"posterPreviewPath\"\n                  width=\"200\"\n                  height=\"150\"\n                  contain\n                >\n                </v-img>\n              </v-row>\n              <!-- -------------****** poster end ******-------------------------- -->\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn text @click=\"closeUpdate\">Cancel</v-btn>\n            <v-btn text @click=\"updateItemConfirm(updateDemo.categoryId)\"\n              >Update</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- -------------****** delete ******-------------------------- -->\n      <v-container>\n        <v-dialog v-model=\"delete_dialog\" max-width=\"400px\">\n          <v-card>\n            <v-card-title class=\"text-h6\"\n              >Are you sure you want to delete this?</v-card-title\n            >\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn text @click=\"closeDelete\">Cancel</v-btn>\n              <v-btn text @click=\"deleteItemConfirm(selectDemo.categoryId)\"\n                >Delete</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-container>\n    </v-toolbar>\n  </div>\n</template>\n\n<script>\nimport api from \"@/util/api\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"CategoryView\",\n  components: {\n    AdminSideBar,\n  },\n  data: () => ({\n    localDomain: api,\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    loading: false,\n    errorAlert: false,\n    poster: null,\n    posterPreviewPath: null,\n    posterPath: \"\",\n    selectDemo: {},\n    updateDemo: {},\n    headers: [\n      {\n        text: \"id\",\n        align: \"start\",\n        sortable: false,\n        value: \"categoryId\",\n      },\n      { text: \"Table\", value: \"categoryName\" },\n      { text: \"Poster\", value: \"posterPath\", sortable: false },\n      { text: \"Created Time\", value: \"createdAt\" },\n      { text: \"Modified Time\", value: \"updatedAt\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    categoryList: [],\n    newItem: {\n      categoryName: \"\",\n      categoryPhoto: \"\",\n    },\n  }),\n\n  async created() {\n    await this.fetchAllCategories();\n  },\n  methods: {\n    // <!-- -------------****** get all table from api ******-------------------------- -->\n    async fetchAllCategories() {\n      const response = await api.get(\"/category/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.categoryList = data;\n      }\n    },\n    // <!-- -------------****** save Category from api ******-------------------------- -->\n\n    async save() {\n      if (this.$refs.createCategoryForm.validate()) {\n        this.errorAlert = false;\n        const respPoster = await api.postMedia(\n          \"/admin/file/create\",\n          this.poster,\n          this.poster.type\n        );\n        let respPosterData = null;\n\n        if (respPoster.status === 200) {\n          respPosterData = await respPoster.text();\n          //console.log(this.respPosterData);\n        } else {\n          this.errorAlert = true;\n        }\n        if (respPosterData) {\n          // Create Category API\n          const resp = await api.save(\"/category/create\", {\n            categoryName: this.newItem.categoryName,\n            categoryPhoto: respPosterData,\n          });\n          if (resp) {\n            await this.fetchAllCategories();\n            this.dialog = false;\n            this.newItem = {};\n            this.poster = null;\n            this.respPosterData = null;\n            this.posterPreviewPath = null;\n          }\n          if (resp && resp.status === 200) {\n            this.$router.push({ path: \"admin/category\" });\n          }\n        }\n        this.loading = false;\n      }\n    },\n    // <!-- -------------****** update table from api ******-------------------------- -->\n    async updateItemConfirm(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      let posterPath = this.updateDemo.posterPath;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster API\n        const respPoster = await api.putMedia(\n          \"/admin/file/update\",\n          this.updateDemo.poster,\n          this.updateDemo.poster.type,\n          this.updateDemo.posterPath\n        );\n\n        if (respPoster && respPoster.status === 200) {\n          posterPath = await respPoster.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await api.update(\"/category/update/\" + id, {\n        categoryName: this.updateDemo.categoryName,\n        categoryPhoto: posterPath,\n      });\n      if (resp) {\n        await this.fetchAllCategories();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from api ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await api.remove(\"/category/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllCategories();\n        this.delete_dialog = false;\n      }\n    },\n\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      // Copy Object\n      this.updateDemo = Object.assign({}, item);\n      this.poster = null;\n      this.posterPreviewPath = null;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    },\n  },\n};\n</script>\n\n<style>\n.v-btn:hover {\n  background-color: brown;\n  color: white !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}