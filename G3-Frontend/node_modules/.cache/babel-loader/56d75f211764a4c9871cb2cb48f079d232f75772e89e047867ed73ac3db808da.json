{"ast":null,"code":"import utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"Profile\",\n  components: {\n    AdminSideBar\n  },\n  data: () => ({\n    localDomain: utils.constant.localDomain,\n    dialog: false,\n    update_dialog: false,\n    poster: null,\n    posterPreviewPath: null,\n    headers: [{\n      text: \"id\",\n      align: \"start\",\n      sortable: false,\n      value: \"userId\"\n    }, {\n      text: \"User Name\",\n      value: \"userFullName\"\n    }, {\n      text: \"Photo\",\n      value: \"userPhoto\",\n      sortable: false\n    }, {\n      text: \"User Gmail\",\n      value: \"userEmail\",\n      sortable: false\n    }, {\n      text: \"Phone No.\",\n      value: \"userPhone\",\n      sortable: false\n    }, {\n      text: \"Address\",\n      value: \"userAddress\",\n      sortable: false\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    userList: [],\n    updateDemo: {\n      userFullName: \"\",\n      userPhoto: null,\n      userEmail: \"\",\n      userPhone: \"\",\n      userAddress: \"\"\n    }\n  }),\n  async created() {\n    await this.fetchAllProfile();\n  },\n  methods: {\n    // <!-- -------------****** get all category from utils.http ******-------------------------- -->\n    async fetchAllProfile() {\n      const response = await utils.http.get(\"/admin/user/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.userList = data;\n      }\n    },\n    // <!-- -------------****** update Profile from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      let userPhoto = this.updateDemo.userPhoto;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster utils.http\n        const respPosterData = await utils.http.putMedia(\"/admin/file/update\", this.updateDemo.poster, this.updateDemo.poster.type, this.updateDemo.userPhoto);\n        if (respPosterData && respPosterData.status === 200) {\n          userPhoto = await respPosterData.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await utils.http.put(\"/user/profile/update/\" + id, {\n        userFullName: this.updateDemo.userFullName,\n        userPhoto: userPhoto,\n        userEmail: this.updateDemo.userEmail,\n        userPhone: this.updateDemo.userPhone,\n        userAddress: this.updateDemo.userAddress\n      });\n      if (resp && resp.status === 200) {\n        this.update_dialog = false;\n        await this.fetchAllProfile();\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      // Copy Object\n      this.updateDemo = Object.assign({}, item);\n      this.userFullName = this.updateDemo.userFullName;\n      this.userPhoto = this.updateDemo.userPhoto;\n      this.userPhone = this.updateDemo.userPhone;\n      this.userAddress = this.updateDemo.userAddress;\n      this.poster = this.updateDemo.poster;\n      this.posterPreviewPath = this.updateDemo.posterPreviewPath;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AA4IA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;MAAAD;IAAA,EACA;IACAE;IACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;MACA;;MAEA;MACA;MACA;QACA;QACA,iDACA,sBACA,wBACA,6BACA,0BACA;QAEA;UACAJ;QACA;UACAK;QACA;MACA;MACA;QACAN;QACAC;QACAC;QACAC;QACAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACAG;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","AdminSideBar","data","localDomain","dialog","update_dialog","poster","posterPreviewPath","headers","text","align","sortable","value","userList","updateDemo","userFullName","userPhoto","userEmail","userPhone","userAddress","methods","console","onChangePoster","editItem","closeUpdate"],"sourceRoot":"src/views","sources":["AdminUserView.vue"],"sourcesContent":["<template>\n  <div>\n    <AdminSideBar />\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"userList\"\n      :items-per-page=\"5\"\n      class=\"elevation-1\"\n    >\n      <!-- Poster Img -->\n      <template v-slot:[`item.userPhoto`]=\"{ item }\">\n        <v-img\n          :src=\"localDomain + item.userPhoto\"\n          width=\"100\"\n          height=\"100\"\n          contain\n        ></v-img>\n      </template>\n      <template v-slot:top>\n        <v-toolbar color=\"primary\" dark>\n          <v-toolbar-title><strong>Profile CRUD</strong></v-toolbar-title>\n        </v-toolbar>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon color=\"blue darken-1\" class=\"mr-2\" @click=\"editItem(item)\">\n          mdi-pencil\n        </v-icon>\n      </template>\n    </v-data-table>\n    <v-toolbar>\n      <!-- -------------****** update dialog ******-------------------------- -->\n      <v-dialog v-model=\"update_dialog\" max-width=\"400px\">\n        <v-card>\n          <v-toolbar color=\"primary\" dark>\n            <div>Edit User Profile</div>\n            <v-spacer></v-spacer>\n            <v-btn icon @click=\"update_dialog = false\">\n              <v-icon>mdi-close</v-icon>\n            </v-btn>\n          </v-toolbar>\n          <v-card-text>\n            <v-container>\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                  <v-text-field\n                    v-model=\"updateDemo.userFullName\"\n                    label=\"User Name\"\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                  <v-text-field\n                    v-model=\"updateDemo.userEmail\"\n                    label=\"User Email\"\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n\n              <v-row>\n                <!-- -------------****** poster start ******-------------------------- -->\n                <v-col cols=\"12\" sm=\"6\">\n                  <v-file-input\n                    v-model=\"updateDemo.poster\"\n                    label=\"Poster\"\n                    show-size\n                    prepend-icon=\"mdi-camera\"\n                    placeholder=\"Choose Poster Image\"\n                    accept=\"image/png, image/jpeg\"\n                    :rules=\"[\n                      (v) => !!v || 'Required',\n                      (v) =>\n                        !v ||\n                        v.size < 10000000 ||\n                        'Image size should be less than 10 MB!',\n                    ]\"\n                    @change=\"onChangePoster\"\n                  ></v-file-input>\n                </v-col>\n              </v-row>\n              <v-row>\n                <!-- Poster is not selected (null) -->\n                <v-img\n                  v-if=\"posterPreviewPath == null\"\n                  :src=\"localDomain + updateDemo.userPhoto\"\n                  width=\"200\"\n                  height=\"150\"\n                  contain\n                >\n                </v-img>\n                <!-- Poster is selected (not null) -->\n                <v-img\n                  v-if=\"posterPreviewPath != null\"\n                  :src=\"posterPreviewPath\"\n                  width=\"200\"\n                  height=\"150\"\n                  contain\n                >\n                </v-img>\n              </v-row>\n\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                  <v-text-field\n                    v-model=\"updateDemo.userPhone\"\n                    label=\"Phone No.\"\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                  <v-text-field\n                    v-model=\"updateDemo.userAddress\"\n                    label=\"Address\"\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n\n              <!-- -------------****** poster end ******-------------------------- -->\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn text @click=\"closeUpdate\">Cancel</v-btn>\n            <v-btn\n              color=\"blue darken-1\"\n              text\n              @click=\"updateItemConfirm(updateDemo.userId)\"\n              >Update</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-toolbar>\n  </div>\n</template>\n\n<script>\nimport utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"Profile\",\n  components: {\n    AdminSideBar,\n  },\n  data: () => ({\n    localDomain: utils.constant.localDomain,\n    dialog: false,\n    update_dialog: false,\n    poster: null,\n    posterPreviewPath: null,\n    headers: [\n      {\n        text: \"id\",\n        align: \"start\",\n        sortable: false,\n        value: \"userId\",\n      },\n      { text: \"User Name\", value: \"userFullName\" },\n      { text: \"Photo\", value: \"userPhoto\", sortable: false },\n      { text: \"User Gmail\", value: \"userEmail\", sortable: false },\n      { text: \"Phone No.\", value: \"userPhone\", sortable: false },\n      { text: \"Address\", value: \"userAddress\", sortable: false },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    userList: [],\n    updateDemo: {\n      userFullName: \"\",\n      userPhoto: null,\n      userEmail: \"\",\n      userPhone: \"\",\n      userAddress: \"\",\n    },\n  }),\n\n  async created() {\n    await this.fetchAllProfile();\n  },\n  methods: {\n    // <!-- -------------****** get all category from utils.http ******-------------------------- -->\n    async fetchAllProfile() {\n      const response = await utils.http.get(\"/admin/user/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.userList = data;\n      }\n    },\n\n    // <!-- -------------****** update Profile from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      let userPhoto = this.updateDemo.userPhoto;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster utils.http\n        const respPosterData = await utils.http.putMedia(\n          \"/admin/file/update\",\n          this.updateDemo.poster,\n          this.updateDemo.poster.type,\n          this.updateDemo.userPhoto\n        );\n\n        if (respPosterData && respPosterData.status === 200) {\n          userPhoto = await respPosterData.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await utils.http.put(\"/user/profile/update/\" + id, {\n        userFullName: this.updateDemo.userFullName,\n        userPhoto: userPhoto,\n        userEmail: this.updateDemo.userEmail,\n        userPhone: this.updateDemo.userPhone,\n        userAddress: this.updateDemo.userAddress,\n      });\n      if (resp && resp.status === 200) {\n        this.update_dialog = false;\n        await this.fetchAllProfile();\n      }\n    },\n\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n\n    editItem(item) {\n      this.update_dialog = true;\n      // Copy Object\n      this.updateDemo = Object.assign({}, item);\n      this.userFullName = this.updateDemo.userFullName;\n      this.userPhoto = this.updateDemo.userPhoto;\n      this.userPhone = this.updateDemo.userPhone;\n      this.userAddress = this.updateDemo.userAddress;\n      this.poster = this.updateDemo.poster;\n      this.posterPreviewPath = this.updateDemo.posterPreviewPath;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n  },\n};\n</script>\n\n<style>\n.v-btn:hover {\n  background-color: brown;\n  color: white !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}