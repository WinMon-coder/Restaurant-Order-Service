{"ast":null,"code":"import utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"TableView\",\n  components: {\n    AdminSideBar\n  },\n  data: () => ({\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    selectDemo: {},\n    updateDemo: {},\n    headers: [{\n      text: \"id\",\n      align: \"start\",\n      sortable: false,\n      value: \"tableId\"\n    }, {\n      text: \"Table\",\n      value: \"tableName\"\n    }, {\n      text: \"Created Time\",\n      value: \"createdAt\"\n    }, {\n      text: \"Modified Time\",\n      value: \"updatedAt\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    tableList: [],\n    newItem: {\n      tableName: \"\"\n    }\n  }),\n  async created() {\n    await this.fetchAllTables();\n  },\n  methods: {\n    // <!-- -------------****** get all table from utils.http ******-------------------------- -->\n    async fetchAllTables() {\n      const response = await utils.http.get(\"/table/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.tableList = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    },\n    // <!-- -------------****** save table from utils.http ******-------------------------- -->\n    async save() {\n      const resp = await utils.http.post(\"/admin/table/create\", {\n        tableName: this.newItem.tableName\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.dialog = false;\n        this.newItem = {};\n      }\n    },\n    // <!-- -------------****** update table from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      const resp = await utils.http.put(\"/admin/table/update/\" + id, {\n        tableName: this.updateDemo.tableName\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/table/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllTables();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      this.updateDemo = item;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AAmGA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,EACA;IACAE;IACAC;MACAC;IACA;EACA;EAEA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;QACA;QACA;MACA;QACAC;MACA;IACA;IACA;IACA;MACA;QACAF;MACA;MACA;QACA;QACA;QACA;MACA;IACA;IAEA;IACA;MACA;QACAA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;;IAEAG;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","AdminSideBar","data","dialog","update_dialog","delete_dialog","selectDemo","updateDemo","headers","text","align","sortable","value","tableList","newItem","tableName","methods","console","deleteItem","editItem","closeUpdate","closeDelete","saveCancel"],"sourceRoot":"src/views","sources":["AdminTableView.vue"],"sourcesContent":["<template>\n  <div>\n    <AdminSideBar />\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"tableList\"\n      :items-per-page=\"5\"\n      class=\"elevation-1\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <!-- -------------****** create ******-------------------------- -->\n          <v-dialog v-model=\"dialog\" max-width=\"400px\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n                Add New Table\n              </v-btn>\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"text-h4\">Add New Table</span>\n              </v-card-title>\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"7\" md=\"5\">\n                      <v-text-field\n                        v-model=\"newItem.tableName\"\n                        label=\"Table Name\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn text @click=\"saveCancel\">Cancle </v-btn>\n                <v-btn text @click=\"save\"> save </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon class=\"mr-2\" @click=\"editItem(item)\"> mdi-pencil </v-icon>\n        <v-icon @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n      </template>\n    </v-data-table>\n    <v-toolbar>\n      <!-- -------------****** update ******-------------------------- -->\n      <v-dialog v-model=\"update_dialog\" max-width=\"400px\">\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h4\">Edit Table</span>\n          </v-card-title>\n          <v-card-text>\n            <v-container>\n              <v-row>\n                <v-col cols=\"12\" sm=\"7\" md=\"5\">\n                  <v-text-field\n                    v-model=\"updateDemo.tableName\"\n                    label=\"Table Name\"\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn text @click=\"closeUpdate\">Cancel</v-btn>\n            <v-btn text @click=\"updateItemConfirm(updateDemo.tableId)\"\n              >Update</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- -------------****** delete ******-------------------------- -->\n      <v-container>\n        <v-dialog v-model=\"delete_dialog\" max-width=\"400px\">\n          <v-card>\n            <v-card-title class=\"text-h6\"\n              >Are you sure you want to delete this?</v-card-title\n            >\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn text @click=\"closeDelete\">Cancel</v-btn>\n              <v-btn text @click=\"deleteItemConfirm(selectDemo.tableId)\"\n                >Delete</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-container>\n    </v-toolbar>\n  </div>\n</template>\n\n<script>\nimport utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"TableView\",\n  components: {\n    AdminSideBar,\n  },\n  data: () => ({\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    selectDemo: {},\n    updateDemo: {},\n    headers: [\n      {\n        text: \"id\",\n        align: \"start\",\n        sortable: false,\n        value: \"tableId\",\n      },\n      { text: \"Table\", value: \"tableName\" },\n      { text: \"Created Time\", value: \"createdAt\" },\n      { text: \"Modified Time\", value: \"updatedAt\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    tableList: [],\n    newItem: {\n      tableName: \"\",\n    },\n  }),\n\n  async created() {\n    await this.fetchAllTables();\n  },\n  methods: {\n    // <!-- -------------****** get all table from utils.http ******-------------------------- -->\n    async fetchAllTables() {\n      const response = await utils.http.get(\"/table/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.tableList = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    },\n    // <!-- -------------****** save table from utils.http ******-------------------------- -->\n    async save() {\n      const resp = await utils.http.post(\"/admin/table/create\", {\n        tableName: this.newItem.tableName,\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.dialog = false;\n        this.newItem = {};\n      }\n    },\n\n    // <!-- -------------****** update table from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      const resp = await utils.http.put(\"/admin/table/update/\" + id, {\n        tableName: this.updateDemo.tableName,\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/table/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllTables();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      this.updateDemo = item;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    },\n  },\n};\n</script>\n\n<style>\n.v-btn:hover {\n  background-color: brown;\n  color: white !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}