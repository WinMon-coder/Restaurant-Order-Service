{"ast":null,"code":"import api from \"./@/admin/utils/api\";\n//import api from \"@/util/api\";\nexport default {\n  data() {\n    return {\n      dialog: false,\n      delete_dialog: false,\n      update_dialog: false,\n      selectDemo: {},\n      userStatus: [\"active\", \"rest\"],\n      userRole: [\"waiter\", \"admin\"],\n      poster: null,\n      posterPreviewPath: null,\n      headers: [{\n        text: \"Id\",\n        align: \"start\",\n        sortable: false,\n        value: \"userId\"\n      }, {\n        text: \"User Name\",\n        value: \"userName\"\n      }, {\n        text: \"Email \",\n        value: \"email\"\n      }, {\n        text: \"Password\",\n        value: \"password\"\n      }, {\n        text: \"User Role\",\n        value: \"userRole\"\n      }, {\n        text: \"User Status\",\n        value: \"userStatus\"\n      },\n      // {text:'User Photo',value:'poster'},\n      {\n        text: \"Phone No\",\n        value: \"phone\"\n      }, {\n        text: \"Address\",\n        value: \"address\"\n      }, {\n        text: \"Start Join Date\",\n        value: \"startJoinDate\"\n      }, {\n        text: \"Last Join Date\",\n        value: \"lastJoinDate\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\"\n      }],\n      users: [],\n      newItem: {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        userRole: \"\",\n        userStatus: \"\",\n        userPhoto: \"\",\n        phone: \"\",\n        address: \"\",\n        startJoinDate: \"\",\n        lastJoinDate: \"\"\n      },\n      updateItem: {\n        userId: 0,\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        userRole: \"\",\n        userStatus: \"\",\n        userPhoto: \"\",\n        phone: \"\",\n        address: \"\",\n        startJoinDate: \"\",\n        lastJoinDate: \"\"\n      }\n    };\n  },\n  async created() {\n    await this.getAllUsers();\n  },\n  methods: {\n    async getAllUsers() {\n      const response = await api.get(\"/admin/user/list\");\n      if (response) {\n        const data = await response.json();\n        this.users = data;\n      } else {\n        console.log(\"sth wrong\");\n      }\n    },\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    async deleteItemConfirm(id) {\n      const resp = await api.remove(\"user/delete/deleteId/\" + id);\n      if (resp.status == 200) {\n        await this.getAllUsers();\n        console.log(\"deleted...\");\n        this.delete_dialog = false;\n      } else {\n        console.log(\"sth wrong in delete id\");\n      }\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      this.selectDemo = item;\n    },\n    async UpdateConfirm(id) {\n      const resp = await api.update(\"user/update/\" + id, {\n        userId: this.selectDemo.userId,\n        userName: this.updateItem.userName,\n        email: this.updateItem.email,\n        password: this.updateItem.password,\n        userRole: this.updateItem.userRole,\n        userStatus: this.updateItem.userStatus,\n        userPhoto: this.updateItem.userPhoto,\n        phone: this.updateItem.phone,\n        address: this.updateItem.address,\n        startJoinDate: this.updateItem.startJoinDate,\n        lastJoinDate: this.updateItem.lastJoinDate\n      });\n      console.log(resp);\n      if (resp) {\n        await this.getAllUsers();\n        console.log(resp);\n        this.update_dialog = false;\n      }\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    },\n    async save() {\n      let respPosterData = null;\n      const respPoster = await api.postMedia(\"/admin/file/create\", this.poster, this.poster.type);\n      if (respPoster.status === 200) {\n        respPosterData = await respPoster.text();\n      }\n      const resp = await api.save(\"user/create\", {\n        userName: this.newItem.userName,\n        email: this.newItem.email,\n        password: this.newItem.password,\n        userRole: this.newItem.userRole,\n        userStatus: this.newItem.userStatus,\n        userPhoto: this.newItem.userPhoto,\n        posterPath: respPosterData,\n        phone: this.newItem.phone,\n        address: this.newItem.address,\n        startJoinDate: this.newItem.startJoinDate,\n        lastJoinDate: this.newItem.lastJoinDate\n      });\n      console.log(resp);\n      if (resp) {\n        await this.getAllUsers();\n        console.log(\"Hello World\");\n        this.dialog = false;\n      }\n    },\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    }\n  }\n};","map":{"version":3,"mappings":"AAuTA;AACA;AACA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA;MACA;MACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,EACA;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAZ;QACAD;QACAc;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAC;QACAT;QACAC;QACAC;QACAZ;QACAD;QACAc;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEA;IACA;EACA;EAEAG;IACA;MACA;MACA;QACA;QACA;MACA;QACAC;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;IACA;IAEA;MACA;MACA;QACA;QACAF;QACA;MACA;QACAA;MACA;IACA;IAEAG;MACA;MACA;IACA;IAEA;MACA;QACAL;QACAT;QACAC;QACAC;QACAZ;QACAD;QACAc;QACAC;QACAC;QACAC;QACAC;MACA;MAEAI;MACA;QACA;QACAA;QACA;MACA;IACA;IAEAI;MACA;IACA;IAEAC;MACA;IACA;IAEA;MACA;MACA,uCACA,sBACA,aACA,iBACA;MACA;QACAC;MACA;MAEA;QACAjB;QACAC;QACAC;QACAZ;QACAD;QACAc;QACAe;QACAd;QACAC;QACAC;QACAC;MACA;MACAI;MACA;QACA;QACAA;QACA;MACA;IACA;IAEAQ;MACA;IACA;EACA;AACA","names":["data","dialog","delete_dialog","update_dialog","selectDemo","userStatus","userRole","poster","posterPreviewPath","headers","text","align","sortable","value","users","newItem","userName","email","password","userPhoto","phone","address","startJoinDate","lastJoinDate","updateItem","userId","methods","console","deleteItem","closeDelete","editItem","closeUpdate","saveCancel","respPosterData","posterPath","onChangePoster"],"sourceRoot":"src/views/admin","sources":["AdminUserView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Table Title -->\n    <h1>Users Management Table</h1>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"users\"\n      :items-per-page=\"10\"\n      class=\"elevation-1\"\n    >\n      <!-- Add Button and New Item Dialog Appear -->\n      <!-- for New Project  vuetify -> get started -> UIcomponent -> tables ->Datatable -> crud   -->\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-dialog v-model=\"dialog\" max-width=\"500px\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n                New Users\n              </v-btn>\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"text-h5\">Add New User</span>\n              </v-card-title>\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                    <v-card-text>User ID:{{ selectDemo.userId }}</v-card-text>\n                  </v-row>\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"6\">\n                      <v-text-field\n                        v-model=\"newItem.userName\"\n                        label=\"User Name\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                  <v-row>\n                    <v-col>\n                      <v-text-field\n                        v-model=\"newItem.email\"\n                        label=\"Email\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col>\n                      <v-text-field\n                        v-model=\"newItem.password\"\n                        label=\"password\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                  <v-row>\n                    <v-col>\n                      <v-select\n                        :items=\"userRole\"\n                        label=\"User Role\"\n                        v-model=\"newItem.userRole\"\n                      ></v-select>\n                    </v-col>\n                    <v-col>\n                      <v-select\n                        :items=\"userStatus\"\n                        label=\"User Status\"\n                        v-model=\"newItem.userStatus\"\n                      ></v-select>\n                    </v-col>\n                  </v-row>\n\n                  <v-row>\n                    <v-col>\n                      <v-text-field\n                        v-model=\"newItem.userPhoto\"\n                        label=\"User Photo\"\n                      ></v-text-field>\n\n                      <v-file-input\n                        v-model=\"poster\"\n                        label=\"User Photo\"\n                        show-size\n                        prepend-icon=\"mdi-camera\"\n                        placeholder=\"Choose Poster Image\"\n                        accept=\"image/png, image/jpeg\"\n                        :rules=\"[\n                          (v) => !!v || 'Required',\n                          (v) =>\n                            !v ||\n                            v.size < 10000000 ||\n                            'Image size should be less than 10 MB!',\n                        ]\"\n                        @change=\"onChangePoster\"\n                      ></v-file-input>\n\n                      <!-- Poster Preview -->\n                      <v-img\n                        v-if=\"posterPreviewPath != null\"\n                        :src=\"posterPreviewPath\"\n                        width=\"200\"\n                        height=\"150\"\n                        contain\n                      >\n                      </v-img>\n                    </v-col>\n                    <v-col>\n                      <v-text-field\n                        v-model=\"newItem.phone\"\n                        label=\"Phone NO\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col>\n                      <v-text-field\n                        v-model=\"newItem.address\"\n                        label=\"Address\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                  <v-row>\n                    <v-col>\n                      <template>\n                        <v-row>\n                          <v-date-picker\n                            v-model=\"newItem.startJoinDate\"\n                          ></v-date-picker>\n                        </v-row>\n                      </template>\n                    </v-col>\n                    <v-col>\n                      <template>\n                        <v-row>\n                          <v-date-picker\n                            v-model=\"newItem.lastJoinDate\"\n                          ></v-date-picker>\n                        </v-row>\n                      </template>\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-card-text>\n\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" @click=\"saveCancel\">\n                  Cancel\n                </v-btn>\n                <v-btn color=\"blue darken-1\" @click=\"save\"> Save </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <!-- End Add Dialog -->\n\n      <!-- Action for Edit and Delete -->\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon\n          small\n          class=\"mr-2\"\n          color=\"blue darken-1\"\n          @click=\"editItem(item)\"\n        >\n          mdi-pencil\n        </v-icon>\n\n        <v-icon small color=\"red\" @click=\"deleteItem(item)\">\n          mdi-delete\n        </v-icon>\n      </template>\n    </v-data-table>\n\n    <!-- for Delete Dialog Box -->\n\n    <!-- script file နဲ့ချိတ်မှာမို့လို့ v-model မှာ value ပေးရတယ် -->\n\n    <v-dialog v-model=\"delete_dialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"text-h5\"\n          >Are you sure you want to delete this item?</v-card-title\n        >\n        <v-card-text>{{ selectDemo.userId }}</v-card-text>\n        <v-card-text>{{ selectDemo.userName }}</v-card-text>\n        <v-card-text>{{ selectDemo.email }}</v-card-text>\n        <v-card-text>{{ selectDemo.userStatus }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"red\" @click=\"closeDelete\">Cancel</v-btn>\n\n          <v-btn\n            color=\"blue darken-1\"\n            @click=\"deleteItemConfirm(selectDemo.userId)\"\n            >Delete</v-btn\n          >\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- End Delete Dialog Box -->\n\n    <!-- for Update Dialog Box -->\n\n    <v-dialog v-model=\"update_dialog\" max-width=\"800px\">\n      <!-- //script file နဲ့ချိတ်မှာမို့လို့ v-model မှာ value ပေးရတယ်  -->\n      <v-card>\n        <v-card-title class=\"text-h5\">Here You Can Update!</v-card-title>\n        <v-spacer></v-spacer>\n        <!-- <v-card-text>ID:{{selectDemo.userId}}</v-card-text>\n                    <v-card-text>Name: {{selectDemo.userName}}</v-card-text>\n                    <v-card-text>Email: {{selectDemo.email}}</v-card-text> -->\n\n        <v-spacer></v-spacer>\n        <v-card-text>\n          <v-container>\n            <v-row>\n              <v-card-text>User ID:{{ selectDemo.userId }}</v-card-text>\n            </v-row>\n            <v-row>\n              <v-col cols=\"12\" sm=\"6\">\n                <v-text-field\n                  v-model=\"updateItem.userName\"\n                  label=\"User Name\"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-col>\n                <v-text-field\n                  v-model=\"updateItem.email\"\n                  label=\"Email\"\n                ></v-text-field>\n              </v-col>\n              <v-col>\n                <v-text-field\n                  v-model=\"updateItem.password\"\n                  label=\"password\"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-col>\n                <v-select\n                  :items=\"userRole\"\n                  label=\"User Role\"\n                  v-model=\"updateItem.userRole\"\n                ></v-select>\n              </v-col>\n              <v-col>\n                <v-select\n                  :items=\"userStatus\"\n                  label=\"User Status\"\n                  v-model=\"updateItem.userStatus\"\n                ></v-select>\n              </v-col>\n            </v-row>\n\n            <v-row>\n              <v-col>\n                <v-text-field\n                  v-model=\"updateItem.userPhoto\"\n                  label=\"User Photo\"\n                ></v-text-field>\n              </v-col>\n              <v-col>\n                <v-text-field\n                  v-model=\"updateItem.phone\"\n                  label=\"Phone NO\"\n                ></v-text-field>\n              </v-col>\n              <v-col>\n                <v-text-field\n                  v-model=\"updateItem.address\"\n                  label=\"Address\"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-col>\n                <template>\n                  <v-row>\n                    <v-date-picker\n                      v-model=\"updateItem.startJoinDate\"\n                    ></v-date-picker>\n                  </v-row>\n                </template>\n              </v-col>\n              <v-col>\n                <template>\n                  <v-row>\n                    <v-date-picker\n                      v-model=\"updateItem.lastJoinDate\"\n                    ></v-date-picker>\n                  </v-row>\n                </template>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"red\" @click=\"closeUpdate\">Cancel</v-btn>\n\n          <v-btn color=\"blue darken-1\" @click=\"UpdateConfirm(selectDemo.id)\"\n            >Update</v-btn\n          >\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- End Update Dialog -->\n  </div>\n</template>\n\n<script>\nimport api from \"./@/admin/utils/api\";\n//import api from \"@/util/api\";\nexport default {\n  data() {\n    return {\n      dialog: false,\n      delete_dialog: false,\n      update_dialog: false,\n      selectDemo: {},\n      userStatus: [\"active\", \"rest\"],\n      userRole: [\"waiter\", \"admin\"],\n      poster: null,\n      posterPreviewPath: null,\n      headers: [\n        {\n          text: \"Id\",\n          align: \"start\",\n          sortable: false,\n          value: \"userId\",\n        },\n        { text: \"User Name\", value: \"userName\" },\n        { text: \"Email \", value: \"email\" },\n        { text: \"Password\", value: \"password\" },\n        { text: \"User Role\", value: \"userRole\" },\n        { text: \"User Status\", value: \"userStatus\" },\n        // {text:'User Photo',value:'poster'},\n        { text: \"Phone No\", value: \"phone\" },\n        { text: \"Address\", value: \"address\" },\n        { text: \"Start Join Date\", value: \"startJoinDate\" },\n        { text: \"Last Join Date\", value: \"lastJoinDate\" },\n        { text: \"Actions\", value: \"actions\" },\n      ],\n      users: [],\n\n      newItem: {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        userRole: \"\",\n        userStatus: \"\",\n        userPhoto: \"\",\n        phone: \"\",\n        address: \"\",\n        startJoinDate: \"\",\n        lastJoinDate: \"\",\n      },\n\n      updateItem: {\n        userId: 0,\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        userRole: \"\",\n        userStatus: \"\",\n        userPhoto: \"\",\n        phone: \"\",\n        address: \"\",\n        startJoinDate: \"\",\n        lastJoinDate: \"\",\n      },\n    };\n  },\n\n  async created() {\n    await this.getAllUsers();\n  },\n\n  methods: {\n    async getAllUsers() {\n      const response = await api.get(\"/admin/user/list\");\n      if (response) {\n        const data = await response.json();\n        this.users = data;\n      } else {\n        console.log(\"sth wrong\");\n      }\n    },\n\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n\n    async deleteItemConfirm(id) {\n      const resp = await api.remove(\"user/delete/deleteId/\" + id);\n      if (resp.status == 200) {\n        await this.getAllUsers();\n        console.log(\"deleted...\");\n        this.delete_dialog = false;\n      } else {\n        console.log(\"sth wrong in delete id\");\n      }\n    },\n\n    editItem(item) {\n      this.update_dialog = true;\n      this.selectDemo = item;\n    },\n\n    async UpdateConfirm(id) {\n      const resp = await api.update(\"user/update/\" + id, {\n        userId: this.selectDemo.userId,\n        userName: this.updateItem.userName,\n        email: this.updateItem.email,\n        password: this.updateItem.password,\n        userRole: this.updateItem.userRole,\n        userStatus: this.updateItem.userStatus,\n        userPhoto: this.updateItem.userPhoto,\n        phone: this.updateItem.phone,\n        address: this.updateItem.address,\n        startJoinDate: this.updateItem.startJoinDate,\n        lastJoinDate: this.updateItem.lastJoinDate,\n      });\n\n      console.log(resp);\n      if (resp) {\n        await this.getAllUsers();\n        console.log(resp);\n        this.update_dialog = false;\n      }\n    },\n\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n\n    saveCancel() {\n      this.dialog = false;\n    },\n\n    async save() {\n      let respPosterData = null;\n      const respPoster = await api.postMedia(\n        \"/admin/file/create\",\n        this.poster,\n        this.poster.type\n      );\n      if (respPoster.status === 200) {\n        respPosterData = await respPoster.text();\n      }\n\n      const resp = await api.save(\"user/create\", {\n        userName: this.newItem.userName,\n        email: this.newItem.email,\n        password: this.newItem.password,\n        userRole: this.newItem.userRole,\n        userStatus: this.newItem.userStatus,\n        userPhoto: this.newItem.userPhoto,\n        posterPath: respPosterData,\n        phone: this.newItem.phone,\n        address: this.newItem.address,\n        startJoinDate: this.newItem.startJoinDate,\n        lastJoinDate: this.newItem.lastJoinDate,\n      });\n      console.log(resp);\n      if (resp) {\n        await this.getAllUsers();\n        console.log(\"Hello World\");\n        this.dialog = false;\n      }\n    },\n\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}