{"ast":null,"code":"// import swal from \"sweetalert2\";\n// window.swal = swal;\nimport { mapGetters } from \"vuex\";\nimport utils from \"@/utils/utils\";\nexport default {\n  data: () => ({\n    paymentForm: false,\n    discountAmount: 0,\n    onPay: \"\",\n    localDomain: utils.constant.localDomain,\n    updateDemo: {\n      orderId: \"\"\n    },\n    discount: {}\n  }),\n  computed: {\n    ...mapGetters([\"getTable\", \"updateOrderTotalPrice\"])\n  },\n  async created() {\n    await this.fetchActiveDiscount();\n  },\n  methods: {\n    async fetchActiveDiscount() {\n      const response = await utils.http.get(\"/discount/active\");\n      if (response.status === 200) {\n        const data = await response.json();\n        if (data) this.discount = data;\n        console.log(data);\n      }\n    },\n    capitalized(name) {\n      const capitalizedFirst = name[0].toUpperCase();\n      const rest = name.slice(1);\n      return capitalizedFirst + rest;\n    },\n    // <!-- -------------****** update user from utils.http ******-------------------------- -->\n    async updateOrderStatus(id) {\n      if (this.$refs.paymentForm.validate()) {\n        this.updateDemo.orderId = id;\n        const resp = await utils.http.put(\"/user/update/order_status/\", {\n          orderId: this.updateDemo.orderId\n        });\n        if (resp && resp.status === 200) {\n          this.$router.go(); // current page refresh\n        }\n      }\n    },\n\n    closePayment() {\n      this.$emit(\"payment_dialog\");\n    }\n  }\n};","map":{"version":3,"mappings":"AA6GA;AACA;AACA;AACA;AACA;EACAA;IACAC;IACAC;IACAC;IACAC;IACAC;MAAAC;IAAA;IACAC;EACA;EAEAC;IACA;EACA;EACA;IACA;EACA;EACAC;IACA;MACA;MAEA;QACA;QACA;QACAC;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACA;MACA;QACA;QACA;UACAL;QACA;QAEA;UACA;QACA;MACA;IACA;;IACAM;MACA;IACA;EACA;AACA","names":["data","paymentForm","discountAmount","onPay","localDomain","updateDemo","orderId","discount","computed","methods","console","capitalized","closePayment"],"sourceRoot":"src/components","sources":["BillPayment.vue"],"sourcesContent":["<template>\n  <v-container>\n    <h3 class=\"ml-3\">Bills For : Table - {{ getTable.table.tableName }}</h3>\n    <!-- ---------------------------- Order Items ---------------------------- -->\n    <v-list\n      subheader\n      two-line\n      class=\"mt-1\"\n      v-for=\"item in getTable.table.order.orderItems\"\n      :key=\"item.orderItemId\"\n    >\n      <v-list-item>\n        <v-list-item-avatar rounded color=\"grey lighten-4\">\n          <v-img :src=\"localDomain + item.food.foodPhoto\"></v-img>\n        </v-list-item-avatar>\n        <v-list-item-content>\n          <v-list-item-title class=\"subtitle-2\">\n            {{ capitalized(item.food.foodName) }}</v-list-item-title\n          >\n          <v-list-item-subtitle>\n            {{ item.quantity }} X\n            <strong>{{ item.food.foodPrice }} Ks</strong>\n          </v-list-item-subtitle>\n        </v-list-item-content>\n        <v-list-item-action class=\"caption\"\n          >{{ item.quantity * item.food.foodPrice }}Ks\n        </v-list-item-action>\n      </v-list-item>\n    </v-list>\n\n    <!-- ---------------------------- End Order Items  ---------------------------- -->\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-container class=\"mt-2\" v-if=\"discount.isActive == true\">\n      <v-row class=\"ml-1 mr-1\">\n        <span>Sub Total :</span>\n        <v-spacer></v-spacer>\n        <span> {{ updateOrderTotalPrice }}Ks </span>\n      </v-row>\n      <v-row class=\"ml-1 mr-1\">\n        <span class=\"error--text\"\n          >Discount ({{ discount.discountPercentage }}% )</span\n        >\n        <v-spacer></v-spacer>\n        <span class=\"error--text\">\n          {{ getTable.table.order.orderDiscountTotal }}Ks\n        </span>\n      </v-row>\n      <v-row class=\"ml-1 mr-1 mt-3\">\n        <strong class=\"black--text\">Total :</strong>\n        <v-spacer></v-spacer>\n        <strong class=\"black--text\">{{ getTable.table.billTotal }}Ks</strong>\n      </v-row>\n    </v-container>\n\n    <v-toolbar v-else flat>\n      <strong>Total</strong><v-spacer></v-spacer\n      ><strong>{{ getTable.table.billTotal }}Ks</strong>\n    </v-toolbar>\n\n    <v-toolbar flat>\n      <strong>Cash :</strong><v-spacer></v-spacer><v-spacer></v-spacer>\n      <strong> {{ onPay }}Ks</strong>\n    </v-toolbar>\n    <v-divider class=\"mx-4\"></v-divider>\n    <v-toolbar flat>\n      <strong>Change : </strong><v-spacer></v-spacer>\n\n      <strong v-if=\"onPay <= 0\"> 0Ks </strong>\n      <strong v-else> {{ getTable.table.billTotal - onPay }}Ks </strong>\n    </v-toolbar>\n    <v-form ref=\"paymentForm\" v-model=\"paymentForm\">\n      <v-text-field\n        type=\"number\"\n        v-model=\"onPay\"\n        label=\"By Cash\"\n        outlined\n        clearable\n        suffix=\"MMK\"\n        min=\"1\"\n        :rules=\"[\n          (v) => !!v || 'Required',\n          (v) =>\n            (v && v >= getTable.table.billTotal) ||\n            'Price must be greater than Payment MMK',\n        ]\"\n        required\n      ></v-text-field>\n    </v-form>\n    <!-- ---------------------------- End Total  ---------------------------- -->\n\n    <v-row class=\"mt-2\">\n      <v-spacer></v-spacer>\n\n      <v-btn @click=\"closePayment()\" text class=\"mb-2 widthoutupercase\"\n        >Cancel</v-btn\n      >\n      <v-btn\n        @click=\"updateOrderStatus(getTable.table.order.orderId)\"\n        color=\"primary\"\n        class=\"mb-2 widthoutupercase white--text ml-4 mr-4\"\n        :disabled=\"!paymentForm\"\n        >Payment\n      </v-btn>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n// import swal from \"sweetalert2\";\n// window.swal = swal;\nimport { mapGetters } from \"vuex\";\nimport utils from \"@/utils/utils\";\nexport default {\n  data: () => ({\n    paymentForm: false,\n    discountAmount: 0,\n    onPay: \"\",\n    localDomain: utils.constant.localDomain,\n    updateDemo: { orderId: \"\" },\n    discount: {},\n  }),\n\n  computed: {\n    ...mapGetters([\"getTable\", \"updateOrderTotalPrice\"]),\n  },\n  async created() {\n    await this.fetchActiveDiscount();\n  },\n  methods: {\n    async fetchActiveDiscount() {\n      const response = await utils.http.get(\"/discount/active\");\n\n      if (response.status === 200) {\n        const data = await response.json();\n        if (data) this.discount = data;\n        console.log(data);\n      }\n    },\n    capitalized(name) {\n      const capitalizedFirst = name[0].toUpperCase();\n      const rest = name.slice(1);\n      return capitalizedFirst + rest;\n    },\n    // <!-- -------------****** update user from utils.http ******-------------------------- -->\n    async updateOrderStatus(id) {\n      if (this.$refs.paymentForm.validate()) {\n        this.updateDemo.orderId = id;\n        const resp = await utils.http.put(\"/user/update/order_status/\", {\n          orderId: this.updateDemo.orderId,\n        });\n\n        if (resp && resp.status === 200) {\n          this.$router.go(); // current page refresh\n        }\n      }\n    },\n    closePayment() {\n      this.$emit(\"payment_dialog\");\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}