{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nimport api from \"@/util/api\";\nexport default {\n  name: \"AdminView\",\n  components: {\n    AdminSideBar\n  },\n  data() {\n    return {\n      search: \"\",\n      dialog: false,\n      dialogDelete: false,\n      headers: [{\n        text: \"ID\",\n        value: \"foodId\"\n      }, {\n        text: \"Food Name\",\n        value: \"foodName\"\n      }, {\n        text: \"Category\",\n        value: \"categoryName\"\n      }, {\n        text: \"Price\",\n        value: \"foodPrice\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }],\n      foodList: [],\n      editedIndex: -1,\n      editedItem: {\n        foodName: \"\",\n        categoryName: \"\",\n        categoryList: [],\n        foodPrice: 0\n      },\n      defaultItem: {\n        foodName: \"\",\n        categoryName: \"\",\n        categoryList: [],\n        foodPrice: 0\n      }\n    };\n  },\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  async created() {\n    await this.fetchAllCategories();\n    await this.fetchAllFoods();\n  },\n  methods: {\n    async fetchAllCategories() {\n      const response = await api.get(\"/category/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.categoryList = data;\n      }\n    },\n    async fetchAllFoods() {\n      const response = await api.get(\"/food/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.foodList = data;\n      }\n    },\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    }\n  }\n};","map":{"version":3,"mappings":";AAwFA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA,EACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAJ;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAE;IACAC;MACA;IACA;EACA;EAEAC;IACAhB;MACAiB;IACA;IACAhB;MACAgB;IACA;EACA;EAEA;IACA;IACA;EACA;EAEAC;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;QACAC;MACA;QACA;MACA;MACA;IACA;EACA;AACA","names":["name","components","AdminSideBar","data","search","dialog","dialogDelete","headers","text","value","sortable","foodList","editedIndex","editedItem","foodName","categoryName","categoryList","foodPrice","defaultItem","computed","formTitle","watch","val","methods","editItem","deleteItem","deleteItemConfirm","close","closeDelete","save","Object"],"sourceRoot":"src/views/admin","sources":["AdminView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <admin-side-bar></admin-side-bar>\n    <template>\n      <v-data-table :headers=\"headers\" :items=\"foodList\" class=\"elevation-1\">\n        <template v-slot:top>\n          <v-toolbar flat>\n            <v-toolbar-title>My CRUD</v-toolbar-title>\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\n            <v-spacer></v-spacer>\n            <v-dialog v-model=\"dialog\" max-width=\"500px\">\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  color=\"primary\"\n                  dark\n                  class=\"mb-2\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                >\n                  New Item\n                </v-btn>\n              </template>\n              <v-card>\n                <v-card-title>\n                  <span class=\"text-h5\">{{ formTitle }}</span>\n                </v-card-title>\n\n                <v-card-text>\n                  <v-container>\n                    <v-row>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedItem.foodName\"\n                          label=\"Calories\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedItem.foodCategory.categoryName\"\n                          label=\"Fat (g)\"\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                  </v-container>\n                </v-card-text>\n\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"close\">\n                    Cancel\n                  </v-btn>\n                  <v-btn color=\"blue darken-1\" text @click=\"save\"> Save </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n            <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n              <v-card>\n                <v-card-title class=\"text-h5\"\n                  >Are you sure you want to delete this item?</v-card-title\n                >\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                    >Cancel</v-btn\n                  >\n                  <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                    >OK</v-btn\n                  >\n                  <v-spacer></v-spacer>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </v-toolbar>\n        </template>\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-icon small class=\"mr-2\" @click=\"editItem(item)\">\n            mdi-pencil\n          </v-icon>\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n        </template>\n        <template v-slot:no-data>\n          <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\n        </template>\n      </v-data-table>\n    </template>\n  </v-app>\n</template>\n<script>\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nimport api from \"@/util/api\";\nexport default {\n  name: \"AdminView\",\n  components: {\n    AdminSideBar,\n  },\n  data() {\n    return {\n      search: \"\",\n      dialog: false,\n      dialogDelete: false,\n      headers: [\n        { text: \"ID\", value: \"foodId\" },\n        { text: \"Food Name\", value: \"foodName\" },\n        { text: \"Category\", value: \"categoryName\" },\n        { text: \"Price\", value: \"foodPrice\" },\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n      foodList: [],\n      editedIndex: -1,\n      editedItem: {\n        foodName: \"\",\n        categoryName: \"\",\n        categoryList: [],\n        foodPrice: 0,\n      },\n      defaultItem: {\n        foodName: \"\",\n        categoryName: \"\",\n        categoryList: [],\n        foodPrice: 0,\n      },\n    };\n  },\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    },\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  async created() {\n    await this.fetchAllCategories();\n    await this.fetchAllFoods();\n  },\n\n  methods: {\n    async fetchAllCategories() {\n      const response = await api.get(\"/category/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.categoryList = data;\n      }\n    },\n    async fetchAllFoods() {\n      const response = await api.get(\"/food/list\");\n      if (response.status === 200) {\n        const data = await response.json();\n        this.foodList = data;\n      }\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n  },\n};\n</script>\n<!-- \n<script>\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nimport api from \"@/util/api\";\nexport default {\n  name: \"AdminView\",\n  components: {\n    AdminSideBar,\n  },\n  props: [\"id\"],\n  data() {\n    return {\n      search: \"\",\n      headers: [\n        { text: \"ID\", value: \"foodId\" },\n        { text: \"Food Name\", value: \"foodName\" },\n        { text: \"Category\", value: \"foodCategory.categoryName\" },\n        { text: \"Price\", value: \"foodPrice\" },\n      ],\n      \n    };\n  },\n  \n</script> -->\n\n<style>\n.add-food {\n  background-color: #800015 !important;\n  color: #ffffff !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}