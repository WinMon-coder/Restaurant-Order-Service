{"ast":null,"code":"import SideBar from \"../components/SideBar\";\nimport SideBarRight from \"../components/SideBarRight\";\n//import BillPayment from \"@/components/BillPayment.vue\";\n\nexport default {\n  name: \"TableView\",\n  components: {\n    SideBar,\n    SideBarRight\n    // BillPayment,\n  },\n\n  data: () => ({\n    tableList: []\n  }),\n  async created() {\n    await this.fetchAllTables();\n  },\n  methods: {\n    // <!-- -------------****** get all table from utils.http ******-------------------------- -->\n    async fetchAllTables() {\n      const response = await utils.http.get(\"/table/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.tableList = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    },\n    // <!-- -------------****** save table from utils.http ******-------------------------- -->\n    async save() {\n      const resp = await utils.http.post(\"/admin/table/create\", {\n        tableName: this.createDemo.tableName\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.dialog = false;\n        this.createDemo = {};\n      } else {\n        this.errorAlert = true;\n      }\n    },\n    // <!-- -------------****** update table from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      const resp = await utils.http.put(\"/admin/table/update/\" + id, {\n        tableName: this.updateDemo.tableName\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/table/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllTables();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.deleteDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      this.updateDemo = Object.assign({}, item);\n      this.tableName = this.updateDemo.tableName;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n      this.createDemo = {};\n    }\n  }\n};","map":{"version":3,"mappings":"AA0GA;AACA;AACA;;AAEA;EACAA;EACAC;IACAC;IACAC;IACA;EACA;;EACAC;IACAC;EACA;EAEA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;QACA;QACA;MACA;QACAC;MACA;IACA;IACA;IACA;MACA;QACAC;MACA;MACA;QACA;QACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA;MACA;QACAA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;;IAEAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;AACA","names":["name","components","SideBar","SideBarRight","data","tableList","methods","console","tableName","deleteItem","editItem","closeUpdate","closeDelete","saveCancel"],"sourceRoot":"src/views","sources":["TableView.vue"],"sourcesContent":["<template>\n  <v-app :style=\"{ background: $vuetify.theme.themes.dark.background }\">\n    <SideBar />\n    <SideBarRight />\n    <template>\n      <!-- <div class=\"text-center\"> -->\n      <!-- <v-dialog v-model=\"dialog\" width=\"500\">\n          <template v-slot:activator=\"{ on, attrs }\"> -->\n      <v-container>\n        <v-item-group mandatory class=\"mt-n1\">\n          <v-container>\n            <v-row justify=\"center\" class=\"space\">\n              <!-- ---------------------------- For All Table ---------------------------- -->\n\n              <!-- <v-col cols=\"12\" md=\"2\">\n                      <v-item>\n                        <v-card\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                          class=\"d-flex align-center rounded-lg mx-2\"\n                          height=\"140\"\n                          flat\n                        >\n                          <v-row>\n                            <v-col cols=\"12\" sm=\"12\">\n                              <v-list-item three-line class=\"text-center\">\n                                <v-list-item-content>\n                                  <div align=\"center\" justify=\"center\">\n                                    <v-img\n                                      src=\"c1.png\"\n                                      max-height=\"110\"\n                                      max-width=\"110\"\n                                      contain\n                                    ></v-img>\n                                  </div>\n                                  <v-list-item-subtitle class=\"mt-4\"\n                                    >Testing Payment</v-list-item-subtitle\n                                  >\n                                </v-list-item-content>\n                              </v-list-item>\n                            </v-col>\n                          </v-row>\n                        </v-card>\n                      </v-item>\n                    </v-col> -->\n\n              <!-- ----------------------------End For All Category ---------------------------- -->\n              <!-- ---------------------------- Table ---------------------------- -->\n              <v-col\n                cols=\"12\"\n                md=\"2\"\n                v-for=\"(table, index) in tableList\"\n                :key=\"index\"\n              >\n                <router-link to=\"/menu\" class=\"tx-de\">\n                  <v-item>\n                    <v-card\n                      class=\"d-flex align-center rounded-lg mx-2\"\n                      height=\"140\"\n                      flat\n                    >\n                      <v-row>\n                        <v-col cols=\"12\" sm=\"12\">\n                          <v-list-item three-line class=\"text-center\">\n                            <v-list-item-content>\n                              <div align=\"center\" justify=\"center\">\n                                <v-img\n                                  src=\"c2.png\"\n                                  max-height=\"110\"\n                                  max-width=\"110\"\n                                  contain\n                                ></v-img>\n                              </div>\n                              <br />\n                              <v-list-item-subtitle>\n                                <strong>{{ table.name }}</strong>\n                              </v-list-item-subtitle>\n                            </v-list-item-content>\n                          </v-list-item>\n                        </v-col>\n                      </v-row>\n                    </v-card>\n                  </v-item></router-link\n                >\n              </v-col>\n              <!-- ---------------------------- End Table ---------------------------- -->\n            </v-row>\n          </v-container>\n        </v-item-group>\n      </v-container>\n    </template>\n\n    <!-- <v-card>\n      <v-card-title class=\"text-h5 grey lighten-2\"> Payment </v-card-title>\n\n      <v-card-text>\n        <BillPayment />\n      </v-card-text>\n    </v-card> -->\n    <!-- </v-dialog>\n      </div>\n    </template> -->\n  </v-app>\n</template>\n\n<script>\nimport SideBar from \"../components/SideBar\";\nimport SideBarRight from \"../components/SideBarRight\";\n//import BillPayment from \"@/components/BillPayment.vue\";\n\nexport default {\n  name: \"TableView\",\n  components: {\n    SideBar,\n    SideBarRight,\n    // BillPayment,\n  },\n  data: () => ({\n    tableList: [],\n  }),\n\n  async created() {\n    await this.fetchAllTables();\n  },\n  methods: {\n    // <!-- -------------****** get all table from utils.http ******-------------------------- -->\n    async fetchAllTables() {\n      const response = await utils.http.get(\"/table/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.tableList = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    },\n    // <!-- -------------****** save table from utils.http ******-------------------------- -->\n    async save() {\n      const resp = await utils.http.post(\"/admin/table/create\", {\n        tableName: this.createDemo.tableName,\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.dialog = false;\n        this.createDemo = {};\n      } else {\n        this.errorAlert = true;\n      }\n    },\n\n    // <!-- -------------****** update table from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      const resp = await utils.http.put(\"/admin/table/update/\" + id, {\n        tableName: this.updateDemo.tableName,\n      });\n      if (resp) {\n        await this.fetchAllTables();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/table/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllTables();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.deleteDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      this.updateDemo = Object.assign({}, item);\n      this.tableName = this.updateDemo.tableName;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n      this.createDemo = {};\n    },\n  },\n};\n</script>\n<style>\n.tx-de {\n  text-decoration: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}