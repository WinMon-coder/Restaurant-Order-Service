{"ast":null,"code":"import SideBar from \"@/components/SideBar.vue\";\nimport utils from \"@/utils/utils\";\nexport default {\n  name: \"profile\",\n  components: {\n    SideBar\n  },\n  data() {\n    return {\n      loginUser: {},\n      errorAlert: false,\n      loading: false,\n      update_dialog: false,\n      poster: null,\n      posterPreviewPath: null,\n      updateDemo: {\n        userId: \"\",\n        userFullName: \"\",\n        userEmail: \"\",\n        userPhone: \"\",\n        userPhoto: null,\n        userAddress: \"\"\n      }\n    };\n  },\n  created() {\n    this.loginUser = this.$store.state.loginUser;\n    this.$store.watch(() => {\n      return this.$store.state.loginUser;\n    }, newVal => {\n      this.loginUser = newVal;\n    }, {\n      deep: true\n    });\n  },\n  methods: {\n    async updateUserProfile(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      if (this.loginUser.userPhone == null) {\n        const respPoster = await utils.http.postMedia(\"/admin/file/create\", this.poster, this.poster.type);\n        let respPosterData = null;\n        if (respPoster.status === 200) {\n          respPosterData = await respPoster.text();\n          console.log(this.respPosterData);\n        } else {\n          this.errorAlert = true;\n          if (respPosterData && respPosterData.status === 200) {\n            userPhoto = await respPosterData.text();\n          } else {\n            console.debug(\"Poster Update Failed\");\n          }\n        }\n      }\n      let userPhoto = this.updateDemo.userPhoto;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster utils.http\n        const respPosterData = await utils.http.putMedia(\"/admin/file/update\", this.updateDemo.poster, this.updateDemo.poster.type, this.updateDemo.userPhoto);\n        if (respPosterData && respPosterData.status === 200) {\n          userPhoto = await respPosterData.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await utils.http.put(\"/user/profile/update/\" + id, {\n        userId: this.updateDemo.userId,\n        userFullName: this.updateDemo.userFullName,\n        userEmail: this.updateDemo.userEmail,\n        userPhone: this.updateDemo.userPhone,\n        userAddress: this.updateDemo.userAddress,\n        userPhoto: userPhoto\n      });\n      console.log(this.updateDemo.userFullName);\n      console.log(this.updateDemo.userId);\n      console.log(this.updateDemo.userPhoto);\n      console.log(this.updateDemo.userPhone);\n      console.log(this.updateDemo.userAddress);\n      if (resp && resp.status === 200) {\n        this.update_dialog = false;\n      } else {\n        this.errorAlert = true;\n      }\n      this.loading = false;\n    },\n    onClickUpdateProfile(loginUser) {\n      this.update_dialog = true;\n      this.updateDemo = Object.assign({}, loginUser);\n      this.userId = this.updateDemo.userId;\n      this.userFullName = this.updateDemo.userFullName;\n      this.userEmail = this.updateDemo.userEmail;\n      this.userPhone = this.updateDemo.userPhone;\n      this.userPhoto = this.updateDemo.userPhoto;\n      this.userAddress = this.updateDemo.userAddress;\n      console.log(this.userFullName);\n      console.log(this.userId);\n      console.log(this.userPhoto);\n      console.log(this.userPhone);\n      console.log(this.userAddress);\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AAkMA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAC;IACA;IACA,kBACA;MACA;IACA,GACAC;MACA;IACA,GACA;MACAC;IACA,EACA;EACA;EAEAC;IACA;MACA;MACA;MACA;QACA,8CACA,sBACA,aACA,iBACA;QACA;QACA;UACAC;UACAC;QACA;UACA;UAEA;YACAP;UACA;YACAO;UACA;QACA;MACA;MACA;;MAEA;MACA;MACA;QACA;QACA,iDACA,sBACA,wBACA,6BACA,0BACA;QAEA;UACAP;QACA;UACAO;QACA;MACA;MACA;QACAX;QACAC;QACAC;QACAC;QACAE;QACAD;MACA;MACAO;MACAA;MACAA;MACAA;MACAA;MACA;QACA;MACA;QACA;MACA;MAEA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAD;MACAA;MACAA;MACAA;MACAA;IACA;IACA;IACAE;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","SideBar","data","loginUser","errorAlert","loading","update_dialog","poster","posterPreviewPath","updateDemo","userId","userFullName","userEmail","userPhone","userPhoto","userAddress","created","newVal","deep","methods","respPosterData","console","onClickUpdateProfile","onChangePoster","closeUpdate"],"sourceRoot":"src/views","sources":["ProfileView.vue"],"sourcesContent":["<template>\n  <div>\n    <SideBar />\n    <v-row>\n      <v-col cols=\"12\" md=\"5\">\n        <v-card class=\"mx-auto my-12\" max-width=\"374\">\n          <template slot=\"progress\">\n            <v-progress-linear\n              color=\"deep-purple\"\n              height=\"10\"\n              indeterminate\n            ></v-progress-linear>\n          </template>\n\n          <v-img\n            height=\"250\"\n            src=\"https://cdn.vuetifyjs.com/images/cards/cooking.png\"\n          ></v-img>\n\n          <v-list-item>\n            <v-list-item-icon>\n              <v-icon small color=\"black\"> fa fa-user </v-icon>\n            </v-list-item-icon>\n            <v-list-item-subtitle\n              >Name :\n              <span class=\"text-h5\">{{ loginUser.userFullName }}</span>\n            </v-list-item-subtitle>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-icon>\n              <v-icon small color=\"black\">fa fa-envelope</v-icon>\n            </v-list-item-icon>\n            <v-list-item-subtitle>{{\n              updateDemo.userEmail\n            }}</v-list-item-subtitle>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-icon>\n              <v-icon small color=\"black\"> fa fa-phone </v-icon>\n            </v-list-item-icon>\n            <v-list-item-subtitle>{{\n              updateDemo.userPhone\n            }}</v-list-item-subtitle>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-icon>\n              <v-icon small color=\"black\">fa fa-map-location</v-icon>\n            </v-list-item-icon>\n            <v-list-item-subtitle>{{\n              updateDemo.userAddress\n            }}</v-list-item-subtitle>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-icon>\n              <v-icon small color=\"black\">fa fa-calendar</v-icon>\n            </v-list-item-icon>\n            <v-list-item-subtitle>{{\n              loginUser.startJoinDate\n            }}</v-list-item-subtitle>\n          </v-list-item>\n        </v-card>\n      </v-col>\n      <v-col cols=\"12\" md=\"7\">\n        <v-icon class=\"mr-2\" @click=\"onClickUpdateProfile(loginUser)\">\n          mdi-pencil\n        </v-icon>\n        <v-dialog v-model=\"update_dialog\" max-width=\"500px\">\n          <v-card>\n            <v-card-title>\n              <span class=\"text-h4\">Edit User Profile </span>\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <!-- User Name -->\n                <v-row>\n                  <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                    <v-text-field\n                      v-model=\"updateDemo.userFullName\"\n                      :rules=\"[\n                        (v) => !!v || 'Required',\n                        (v) =>\n                          (v && v.length <= 50) ||\n                          'Title must be less than 50 characters',\n                      ]\"\n                      label=\"Name\"\n                    ></v-text-field>\n                  </v-col>\n\n                  <!-- User Email -->\n\n                  <v-col cols=\"12\" md=\"6\">\n                    <v-text-field\n                      label=\"Email\"\n                      v-model=\"updateDemo.userEmail\"\n                      :rules=\"[\n                        (v) => !!v || 'Required',\n                        (v) => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\n                      ]\"\n                      prepend-icon=\"email\"\n                      type=\"text\"\n                      required\n                    />\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                    <v-text-field\n                      v-model=\"updateDemo.userPhone\"\n                      :rules=\"[\n                        (v) => !!v || 'Required',\n                        (v) =>\n                          (v && v.length <= 50) ||\n                          'Title must be less than 50 characters',\n                      ]\"\n                      label=\"Phone no.\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                    <v-text-field\n                      v-model=\"updateDemo.userAddress\"\n                      :rules=\"[\n                        (v) => !!v || 'Required',\n                        (v) =>\n                          (v && v.length <= 50) ||\n                          'Title must be less than 50 characters',\n                      ]\"\n                      label=\"Address\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"12\" sm=\"6\">\n                    <!-- Poster -->\n                    <v-file-input\n                      v-model=\"poster\"\n                      label=\"Photo\"\n                      show-size\n                      prepend-icon=\"mdi-camera\"\n                      placeholder=\"Choose Poster Image\"\n                      accept=\"image/png, image/jpeg\"\n                      :rules=\"[\n                        (v) => !!v || 'Required',\n                        (v) =>\n                          !v ||\n                          v.size < 10000000 ||\n                          'Image size should be less than 10 MB!',\n                      ]\"\n                      @change=\"onChangePoster\"\n                    ></v-file-input>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <!-- Poster Preview -->\n                  <v-img\n                    v-if=\"posterPreviewPath != null\"\n                    :src=\"posterPreviewPath\"\n                    width=\"200\"\n                    height=\"150\"\n                    contain\n                  >\n                  </v-img>\n                </v-row>\n              </v-container>\n            </v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"brown\" text @click=\"closeUpdate\">Cancel</v-btn>\n              <v-btn\n                color=\"brown\"\n                text\n                @click=\"updateUserProfile(loginUser.userId)\"\n                >Update\n\n                <span v-if=\"!loading\">Save</span>\n                <v-progress-circular\n                  v-else\n                  indeterminate\n                  color=\"primary\"\n                ></v-progress-circular\n              ></v-btn>\n            </v-card-actions>\n            <v-alert class=\"mt-3\" v-show=\"errorAlert\" dense type=\"error\">\n              Create Category Failed!\n            </v-alert>\n          </v-card>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport SideBar from \"@/components/SideBar.vue\";\nimport utils from \"@/utils/utils\";\nexport default {\n  name: \"profile\",\n  components: {\n    SideBar,\n  },\n  data() {\n    return {\n      loginUser: {},\n      errorAlert: false,\n      loading: false,\n      update_dialog: false,\n      poster: null,\n      posterPreviewPath: null,\n      updateDemo: {\n        userId: \"\",\n        userFullName: \"\",\n        userEmail: \"\",\n        userPhone: \"\",\n        userPhoto: null,\n        userAddress: \"\",\n      },\n    };\n  },\n\n  created() {\n    this.loginUser = this.$store.state.loginUser;\n    this.$store.watch(\n      () => {\n        return this.$store.state.loginUser;\n      },\n      (newVal) => {\n        this.loginUser = newVal;\n      },\n      {\n        deep: true,\n      }\n    );\n  },\n\n  methods: {\n    async updateUserProfile(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      if (this.loginUser.userPhone == null) {\n        const respPoster = await utils.http.postMedia(\n          \"/admin/file/create\",\n          this.poster,\n          this.poster.type\n        );\n        let respPosterData = null;\n        if (respPoster.status === 200) {\n          respPosterData = await respPoster.text();\n          console.log(this.respPosterData);\n        } else {\n          this.errorAlert = true;\n\n          if (respPosterData && respPosterData.status === 200) {\n            userPhoto = await respPosterData.text();\n          } else {\n            console.debug(\"Poster Update Failed\");\n          }\n        }\n      }\n      let userPhoto = this.updateDemo.userPhoto;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster utils.http\n        const respPosterData = await utils.http.putMedia(\n          \"/admin/file/update\",\n          this.updateDemo.poster,\n          this.updateDemo.poster.type,\n          this.updateDemo.userPhoto\n        );\n\n        if (respPosterData && respPosterData.status === 200) {\n          userPhoto = await respPosterData.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await utils.http.put(\"/user/profile/update/\" + id, {\n        userId: this.updateDemo.userId,\n        userFullName: this.updateDemo.userFullName,\n        userEmail: this.updateDemo.userEmail,\n        userPhone: this.updateDemo.userPhone,\n        userAddress: this.updateDemo.userAddress,\n        userPhoto: userPhoto,\n      });\n      console.log(this.updateDemo.userFullName);\n      console.log(this.updateDemo.userId);\n      console.log(this.updateDemo.userPhoto);\n      console.log(this.updateDemo.userPhone);\n      console.log(this.updateDemo.userAddress);\n      if (resp && resp.status === 200) {\n        this.update_dialog = false;\n      } else {\n        this.errorAlert = true;\n      }\n\n      this.loading = false;\n    },\n    onClickUpdateProfile(loginUser) {\n      this.update_dialog = true;\n      this.updateDemo = Object.assign({}, loginUser);\n      this.userId = this.updateDemo.userId;\n      this.userFullName = this.updateDemo.userFullName;\n      this.userEmail = this.updateDemo.userEmail;\n      this.userPhone = this.updateDemo.userPhone;\n      this.userPhoto = this.updateDemo.userPhoto;\n      this.userAddress = this.updateDemo.userAddress;\n      console.log(this.userFullName);\n      console.log(this.userId);\n      console.log(this.userPhoto);\n      console.log(this.userPhone);\n      console.log(this.userAddress);\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}