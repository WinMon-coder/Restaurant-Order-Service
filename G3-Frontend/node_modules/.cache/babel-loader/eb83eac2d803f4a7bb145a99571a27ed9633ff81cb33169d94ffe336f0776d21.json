{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"CategoryView\",\n  components: {\n    AdminSideBar\n  },\n  data: () => ({\n    localDomain: utils.constant.localDomain,\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    loading: false,\n    errorAlert: false,\n    poster: null,\n    posterPreviewPath: null,\n    photoPath: null,\n    selectDemo: {},\n    updateDemo: {},\n    headers: [{\n      text: \"id\",\n      align: \"start\",\n      sortable: false,\n      value: \"categoryId\"\n    }, {\n      text: \"Category\",\n      value: \"categoryName\"\n    }, {\n      text: \"Poster\",\n      value: \"photoPath\",\n      sortable: false\n    }, {\n      text: \"Created Time\",\n      value: \"createdAt\"\n    }, {\n      text: \"Modified Time\",\n      value: \"updatedAt\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    categoryList: [],\n    newItem: {\n      categoryName: \"\",\n      categoryPhoto: \"\"\n    }\n  }),\n  async created() {\n    await this.fetchAllCategories();\n  },\n  methods: {\n    // <!-- -------------****** get all category from utils.http ******-------------------------- -->\n    async fetchAllCategories() {\n      const response = await utils.http.get(\"/category/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.categoryList = data;\n      }\n    },\n    // <!-- -------------****** save Category from utils.http ******-------------------------- -->\n\n    async save() {\n      if (this.$refs.createCategoryForm.validate()) {\n        this.errorAlert = false;\n        const respPoster = await utils.http.postMedia(\"/admin/file/create\", this.poster, this.poster.type);\n        let respPosterData = null;\n        if (respPoster.status === 200) {\n          respPosterData = await respPoster.text();\n          //console.log(this.respPosterData);\n        } else {\n          this.errorAlert = true;\n        }\n        if (respPosterData) {\n          // Create Category utils.http\n          const resp = await utils.http.post(\"/admin/category/create\", {\n            categoryName: this.newItem.categoryName,\n            categoryPhoto: respPosterData\n          });\n          if (resp) {\n            await this.fetchAllCategories();\n            this.dialog = false;\n            this.newItem = {};\n            this.poster = null;\n            this.respPosterData = null;\n            this.posterPreviewPath = null;\n          }\n          if (resp && resp.status === 200) {\n            this.$router.push({\n              path: \"admin/category\"\n            });\n          }\n        }\n        this.loading = false;\n      }\n    },\n    // <!-- -------------****** update table from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      let posterPath = this.updateDemo.posterPath;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster utils.http\n        const respPoster = await utils.http.putMedia(\"/admin/file/update\", this.updateDemo.poster, this.updateDemo.poster.type, this.updateDemo.posterPath);\n        if (respPoster && respPoster.status === 200) {\n          posterPath = await respPoster.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await utils.http.put(\"/admin/category/update/\" + id, {\n        categoryName: this.updateDemo.categoryName,\n        categoryPhoto: posterPath\n      });\n      if (resp) {\n        await this.fetchAllCategories();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/category/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllCategories();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      // Copy Object\n      this.updateDemo = Object.assign({}, item);\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    }\n  }\n};","map":{"version":3,"mappings":";AAQA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,EACA;IACAE;IACAC;MACAC;MACAC;IACA;EACA;EAEA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;;IAEA;MACA;QACA;QACA,8CACA,sBACA,aACA,iBACA;QACA;QAEA;UACAC;UACA;QACA;UACA;QACA;QACA;UACA;UACA;YACAH;YACAC;UACA;UACA;YACA;YACA;YACA;YACA;YACA;YACA;UACA;UACA;YACA;cAAAG;YAAA;UACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;MACA;;MAEA;MACA;MACA;QACA;QACA,6CACA,sBACA,wBACA,6BACA,2BACA;QAEA;UACAC;QACA;UACAC;QACA;MACA;MACA;QACAN;QACAC;MACA;MACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACAM;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","AdminSideBar","data","localDomain","dialog","update_dialog","delete_dialog","loading","errorAlert","poster","posterPreviewPath","photoPath","selectDemo","updateDemo","headers","text","align","sortable","value","categoryList","newItem","categoryName","categoryPhoto","methods","respPosterData","path","posterPath","console","onChangePoster","deleteItem","editItem","closeUpdate","closeDelete","saveCancel"],"sourceRoot":"src/views","sources":["AdminView.vue"],"sourcesContent":["<template>\n  <div>\n    <AdminSideBar />\n    <v-form ref=\"createCategoryForm\" v-model=\"createCategoryForm\"> </v-form>\n  </div>\n</template>\n\n<script>\nimport utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"CategoryView\",\n  components: {\n    AdminSideBar,\n  },\n  data: () => ({\n    localDomain: utils.constant.localDomain,\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    loading: false,\n    errorAlert: false,\n    poster: null,\n    posterPreviewPath: null,\n    photoPath: null,\n    selectDemo: {},\n    updateDemo: {},\n    headers: [\n      {\n        text: \"id\",\n        align: \"start\",\n        sortable: false,\n        value: \"categoryId\",\n      },\n      { text: \"Category\", value: \"categoryName\" },\n      { text: \"Poster\", value: \"photoPath\", sortable: false },\n      { text: \"Created Time\", value: \"createdAt\" },\n      { text: \"Modified Time\", value: \"updatedAt\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    categoryList: [],\n    newItem: {\n      categoryName: \"\",\n      categoryPhoto: \"\",\n    },\n  }),\n\n  async created() {\n    await this.fetchAllCategories();\n  },\n  methods: {\n    // <!-- -------------****** get all category from utils.http ******-------------------------- -->\n    async fetchAllCategories() {\n      const response = await utils.http.get(\"/category/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.categoryList = data;\n      }\n    },\n    // <!-- -------------****** save Category from utils.http ******-------------------------- -->\n\n    async save() {\n      if (this.$refs.createCategoryForm.validate()) {\n        this.errorAlert = false;\n        const respPoster = await utils.http.postMedia(\n          \"/admin/file/create\",\n          this.poster,\n          this.poster.type\n        );\n        let respPosterData = null;\n\n        if (respPoster.status === 200) {\n          respPosterData = await respPoster.text();\n          //console.log(this.respPosterData);\n        } else {\n          this.errorAlert = true;\n        }\n        if (respPosterData) {\n          // Create Category utils.http\n          const resp = await utils.http.post(\"/admin/category/create\", {\n            categoryName: this.newItem.categoryName,\n            categoryPhoto: respPosterData,\n          });\n          if (resp) {\n            await this.fetchAllCategories();\n            this.dialog = false;\n            this.newItem = {};\n            this.poster = null;\n            this.respPosterData = null;\n            this.posterPreviewPath = null;\n          }\n          if (resp && resp.status === 200) {\n            this.$router.push({ path: \"admin/category\" });\n          }\n        }\n        this.loading = false;\n      }\n    },\n    // <!-- -------------****** update table from utils.http ******-------------------------- -->\n    async updateItemConfirm(id) {\n      this.errorAlert = false;\n      this.loading = true;\n      let posterPath = this.updateDemo.posterPath;\n\n      // Step 1 -> Update Poster\n      // Null -> Poster is not selected\n      if (this.updateDemo.poster != null) {\n        // Update Poster utils.http\n        const respPoster = await utils.http.putMedia(\n          \"/admin/file/update\",\n          this.updateDemo.poster,\n          this.updateDemo.poster.type,\n          this.updateDemo.posterPath\n        );\n\n        if (respPoster && respPoster.status === 200) {\n          posterPath = await respPoster.text();\n        } else {\n          console.debug(\"Poster Update Failed\");\n        }\n      }\n      const resp = await utils.http.put(\"/admin/category/update/\" + id, {\n        categoryName: this.updateDemo.categoryName,\n        categoryPhoto: posterPath,\n      });\n      if (resp) {\n        await this.fetchAllCategories();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete table from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/category/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllCategories();\n        this.delete_dialog = false;\n      }\n    },\n\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n    onChangePoster(poster) {\n      this.posterPreviewPath = URL.createObjectURL(poster);\n    },\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      // Copy Object\n      this.updateDemo = Object.assign({}, item);\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    },\n  },\n};\n</script>\n\n<style>\n.v-btn:hover {\n  background-color: brown;\n  color: white !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}