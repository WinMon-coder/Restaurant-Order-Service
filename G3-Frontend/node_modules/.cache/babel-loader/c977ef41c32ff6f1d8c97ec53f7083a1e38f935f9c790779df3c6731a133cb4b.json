{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport utils from \"@/utils/utils\";\nimport { mapGetters, mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"SideBarRight\",\n  components: {},\n  data: () => ({\n    localDomain: utils.constant.localDomain,\n    loading: false,\n    errorAlert: false,\n    discountAmount: 0,\n    orderItem: \"\",\n    loginUser: {}\n  }),\n  async created() {\n    this.loginUser = this.$store.getters.loginUser;\n    await this.fetchUserProfile();\n  },\n  computed: {\n    // orderTotalPrice() {\n    //   return this.$store.getters.orderTotalPrice;\n    // },\n    ...mapGetters([\"orderTotalPrice\", \"updateOrderTotalPrice\", \"getTable\", \"getFoodList\"]),\n    ...mapState([\"cart\", \"discount\"])\n  },\n  methods: {\n    capitalized(name) {\n      const capitalizedFirst = name[0].toUpperCase();\n      const rest = name.slice(1);\n      return capitalizedFirst + rest;\n    },\n    // increase(food) {\n    //   this.$store.dispatch(\"IncreaseProdcut\", food);\n    // },\n    // decrease(food) {\n    //   this.$store.dispatch(\"DecreaseProduct\", food);\n    // },\n    // removeFoodFromOrder(food) {\n    //   this.$store.dispatch(\"removeFoodFromOrder\", food);\n    // },\n    // cancelOrderItems() {\n    //   this.$store.dispatch(\"cancelOrderItems\");\n    // },\n    ...mapActions([\"increaseFoodItem\", \"decreaseFoodItem\", \"removeFoodFromOrder\", \"updateIncreaseFoodItem\", \"updateDecreaseFoodItem\", \"updateRemoveFoodFromOrder\", \"cancelOrder\"]),\n    backTo() {\n      this.$router.go(-1);\n    },\n    async saveOrder() {\n      if (!(this.orderTotalPrice <= 0) && this.getTable.table != null) {\n        const resp = await utils.http.post(\"/user/order/create\", {\n          orderTable: this.getTable.table,\n          orderItems: this.cart,\n          orderUser: this.loginUser,\n          orderTotal: this.orderTotalPrice\n        });\n        if (resp && resp.status === 200) {\n          this.$router.push({\n            path: \"/table\"\n          });\n          this.$router.go(0);\n        }\n      }\n    },\n    // async addOnOrder() {\n    //   const resp = await utils.http.post(\"/user/order/create\", {\n    //     orderId: this.getTable.table.order.orderId,\n    //     orderTable: this.getTable.table,\n    //     orderItems: this.getTable.table.order.orderItems,\n    //     orderUser: this.loginUser,\n    //     orderTotal: this.updateOrderTotalPrice,\n    //   });\n\n    //   if (resp && resp.status === 200) {\n    //     this.$router.push({ path: \"/table\" });\n    //     this.$router.go(0);\n    //   }\n    // },\n    async updateOrder() {\n      const resp = await utils.http.put(\"/user/order/update/\" + this.getTable.table.order.orderId, {\n        orderId: this.getTable.table.order.orderId,\n        orderTable: this.getTable.table,\n        orderItems: this.getTable.table.order.orderItems,\n        orderUser: this.loginUser,\n        orderTotal: this.updateOrderTotalPrice\n      });\n      if (resp && resp.status === 200) {\n        this.$router.push({\n          path: \"/table\"\n        });\n        this.$router.go(0);\n      }\n    },\n    async fetchUserProfile() {\n      const response = await utils.http.get(\"/user/profile?id=\" + this.loginUser.userId);\n      if (response) {\n        const data = await response.json();\n        if (data) this.loginUser = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA2QA;AACA;AACA;EACAA;EACAC;EAEAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACA;IACA;IACA;EACA;EACAC;IACA;IACA;IACA;IACA,eACA,mBACA,yBACA,YACA,cACA;IACA;EACA;EACAC;IACAC;MACA;MACA;MAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eACA,oBACA,oBACA,uBACA,0BACA,0BACA,6BACA,cACA;IACAC;MACA;IACA;IACA;MACA;QACA;UACAC;UACAC;UACAC;UACAC;QACA;QAEA;UACA;YAAAC;UAAA;UACA;QACA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;MACA,kCACA,2DACA;QACAC;QACAL;QACAC;QACAC;QACAC;MACA,EACA;MAEA;QACA;UAAAC;QAAA;QACA;MACA;IACA;IACA;MACA,sCACA,4CACA;MACA;QACA;QACA;MACA;QACAE;MACA;IACA;EACA;AACA","names":["name","components","data","localDomain","loading","errorAlert","discountAmount","orderItem","loginUser","computed","methods","capitalized","backTo","orderTable","orderItems","orderUser","orderTotal","path","orderId","console"],"sourceRoot":"src/components","sources":["SideBarRight.vue"],"sourcesContent":["<template>\n  <v-div>\n    <!-- ---------------------------- Bill Payment SideBar  ---------------------------- -->\n    <v-navigation-drawer app color=\"white\" right width=\"320\">\n      <v-row>\n        <v-col cols=\"12\" md=\"7\">\n          <v-list subheader two-line class=\"mt-1\">\n            <!-- /////////// -->\n            <v-list-item to=\"/profile\">\n              <v-list-item-avatar rounded>\n                <img\n                  v-if=\"loginUser.userPhoto != null\"\n                  :src=\"localDomain + loginUser.userPhoto\"\n                  max-width=\"50\"\n                  max-height=\"50\"\n                  contain\n                />\n                <img v-else src=\"../assets/profile3.jpeg\" />\n              </v-list-item-avatar>\n              <v-list-item-content>\n                <div\n                  v-for=\"(role, index) in this.loginUser.userRoles\"\n                  :key=\"index\"\n                >\n                  <v-list-item-subtitle>\n                    <h5 class=\"primary--text\">{{ role.roleName }}</h5>\n                  </v-list-item-subtitle>\n                </div>\n                <v-list-item-title\n                  ><strong>{{\n                    loginUser.userFullName\n                  }}</strong></v-list-item-title\n                >\n              </v-list-item-content>\n            </v-list-item>\n          </v-list></v-col\n        >\n        <v-col cols=\"12\" md=\"5\">\n          <v-container class=\"mt-3\" v-if=\"getTable.table\">\n            <v-chip small color=\"success\" label class=\"white--text\"\n              ><h3>Table - {{ getTable.table.tableName }}</h3></v-chip\n            >\n          </v-container>\n          <v-container class=\"mt-3\" v-else>\n            <v-chip small color=\"error\" label class=\"white--text\"\n              ><h3>No Table</h3></v-chip\n            >\n          </v-container>\n        </v-col>\n      </v-row>\n\n      <strong class=\"ml-3\">Bills</strong>\n      <!-- ---------------------------- Order Items ---------------------------- -->\n      <!-- ************************************************************************************ -->\n\n      <span v-if=\"getTable.table.order.orderItems != null\">\n        <div\n          v-for=\"(item, index) in getTable.table.order.orderItems\"\n          :key=\"index\"\n        >\n          <v-list subheader two-line>\n            <v-list-item>\n              <v-list-item-avatar rounded color=\"grey lighten-4\">\n                <v-img :src=\"localDomain + item.food.foodPhoto\"></v-img>\n              </v-list-item-avatar>\n              <v-row>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-list-item-content>\n                    <v-list-item-title>\n                      {{ capitalized(item.food.foodName) }}\n                    </v-list-item-title>\n                    <v-list-item-subtitle\n                      >{{ item.quantity }} X {{ item.food.foodPrice }}Ks\n                      <!-- <v-btn plain color=\"#800015\" small\n                >No Ice\n                <v-icon right>mdi-pencil</v-icon>\n              </v-btn> -->\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-list-item class=\"justify center text-center\">\n                    <v-btn\n                      fab\n                      dark\n                      x-small\n                      color=\"primary\"\n                      @click.prevent=\"updateIncreaseFoodItem(item.food)\"\n                    >\n                      <v-icon dark>mdi-plus</v-icon>\n                    </v-btn>\n\n                    <v-btn\n                      fab\n                      dark\n                      x-small\n                      color=\"primary\"\n                      @click.prevent=\"updateDecreaseFoodItem(item.food)\"\n                    >\n                      <v-icon dark>mdi-minus</v-icon>\n                    </v-btn>\n                  </v-list-item>\n                </v-col>\n              </v-row>\n              <v-list-item-action class=\"caption\"\n                >{{ item.quantity * item.food.foodPrice }}Ks\n                <v-icon\n                  x-small\n                  class=\"red--text\"\n                  @click.prevent=\"updateRemoveFoodFromOrder(item.food)\"\n                >\n                  fas fa-times\n                </v-icon>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n        </div>\n\n        <!-- ---------------------------- End Order Items  ---------------------------- -->\n        <v-divider class=\"mx-4\"></v-divider>\n        <v-toolbar flat>\n          <strong>Total</strong><v-spacer></v-spacer\n          ><strong>{{ updateOrderTotalPrice }}Ks</strong>\n        </v-toolbar>\n        <!-- ---------------------------- End Total  ---------------------------- -->\n        <v-item-group mandatory class=\"mt-n1\">\n          <v-container>\n            <v-row class=\"mt-1\">\n              <v-col>\n                <v-btn\n                  color=\"#F6EFEF\"\n                  block\n                  dark\n                  class=\"widthoutupercase\"\n                  @click.prevent=\"updateOrder()\"\n                  >Order\n                </v-btn>\n              </v-col>\n              <v-col>\n                <v-btn\n                  color=\"#F6EFEF\"\n                  block\n                  dark\n                  class=\"widthoutupercase\"\n                  @click.prevent=\"backTo()\"\n                  >Cancel</v-btn\n                >\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-item-group>\n      </span>\n      <!-- ************************************************************************************ -->\n      <span v-else>\n        <div v-for=\"(item, index) in cart\" :key=\"index\">\n          <v-list subheader two-line>\n            <v-list-item>\n              <v-list-item-avatar rounded color=\"grey lighten-4\">\n                <v-img :src=\"localDomain + item.food.foodPhoto\"></v-img>\n              </v-list-item-avatar>\n              <v-row>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-list-item-content>\n                    <v-list-item-title>\n                      {{ capitalized(item.food.foodName) }}\n                    </v-list-item-title>\n                    <v-list-item-subtitle\n                      >{{ item.quantity }} X {{ item.food.foodPrice }}Ks\n                      <!-- <v-btn plain color=\"#800015\" small\n                >No Ice\n                <v-icon right>mdi-pencil</v-icon>\n              </v-btn> -->\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-list-item class=\"justify center text-center\">\n                    <v-btn\n                      fab\n                      dark\n                      x-small\n                      color=\"primary\"\n                      @click.prevent=\"increaseFoodItem(item.food)\"\n                    >\n                      <v-icon dark>mdi-plus</v-icon>\n                    </v-btn>\n\n                    <v-btn\n                      fab\n                      dark\n                      x-small\n                      color=\"primary\"\n                      @click.prevent=\"decreaseFoodItem(item.food)\"\n                    >\n                      <v-icon dark>mdi-minus</v-icon>\n                    </v-btn>\n                  </v-list-item>\n                </v-col>\n              </v-row>\n              <v-list-item-action class=\"caption\"\n                >{{ item.quantity * item.food.foodPrice }}Ks\n                <v-icon\n                  x-small\n                  class=\"red--text\"\n                  @click.prevent=\"removeFoodFromOrder(item.food)\"\n                >\n                  fas fa-times\n                </v-icon>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n        </div>\n\n        <!-- ---------------------------- End Order Items  ---------------------------- -->\n\n        <v-divider class=\"mx-4\"></v-divider>\n\n        <v-container v-if=\"discount != null\">\n          <v-row class=\"ml-1 mr-1\">\n            <span class=\"error--text\">Discount :</span><v-spacer></v-spacer\n            ><span class=\"error--text\"\n              >{{\n                (discountAmount =\n                  (orderTotalPrice * discount.discountPercentage) / 100)\n              }}Ks</span\n            >\n          </v-row>\n        </v-container>\n\n        <v-toolbar flat>\n          <strong>Total</strong><v-spacer></v-spacer\n          ><strong>{{ orderTotalPrice }}Ks</strong>\n        </v-toolbar>\n\n        <!-- ---------------------------- End Total  ---------------------------- -->\n        <v-item-group mandatory class=\"mt-n1\">\n          <v-container>\n            <v-row class=\"mt-1\">\n              <v-col>\n                <v-btn\n                  color=\"#F6EFEF\"\n                  block\n                  dark\n                  class=\"widthoutupercase\"\n                  @click.prevent=\"saveOrder()\"\n                  >Order\n                </v-btn>\n              </v-col>\n              <v-col>\n                <v-btn\n                  color=\"#F6EFEF\"\n                  block\n                  dark\n                  class=\"widthoutupercase\"\n                  @click.prevent=\"cancelOrder()\"\n                  >Cancel</v-btn\n                >\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-item-group>\n      </span>\n    </v-navigation-drawer>\n  </v-div>\n</template>\n\n<script>\nimport utils from \"@/utils/utils\";\nimport { mapGetters, mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"SideBarRight\",\n  components: {},\n\n  data: () => ({\n    localDomain: utils.constant.localDomain,\n    loading: false,\n    errorAlert: false,\n    discountAmount: 0,\n    orderItem: \"\",\n    loginUser: {},\n  }),\n  async created() {\n    this.loginUser = this.$store.getters.loginUser;\n    await this.fetchUserProfile();\n  },\n  computed: {\n    // orderTotalPrice() {\n    //   return this.$store.getters.orderTotalPrice;\n    // },\n    ...mapGetters([\n      \"orderTotalPrice\",\n      \"updateOrderTotalPrice\",\n      \"getTable\",\n      \"getFoodList\",\n    ]),\n    ...mapState([\"cart\", \"discount\"]),\n  },\n  methods: {\n    capitalized(name) {\n      const capitalizedFirst = name[0].toUpperCase();\n      const rest = name.slice(1);\n\n      return capitalizedFirst + rest;\n    },\n    // increase(food) {\n    //   this.$store.dispatch(\"IncreaseProdcut\", food);\n    // },\n    // decrease(food) {\n    //   this.$store.dispatch(\"DecreaseProduct\", food);\n    // },\n    // removeFoodFromOrder(food) {\n    //   this.$store.dispatch(\"removeFoodFromOrder\", food);\n    // },\n    // cancelOrderItems() {\n    //   this.$store.dispatch(\"cancelOrderItems\");\n    // },\n    ...mapActions([\n      \"increaseFoodItem\",\n      \"decreaseFoodItem\",\n      \"removeFoodFromOrder\",\n      \"updateIncreaseFoodItem\",\n      \"updateDecreaseFoodItem\",\n      \"updateRemoveFoodFromOrder\",\n      \"cancelOrder\",\n    ]),\n    backTo() {\n      this.$router.go(-1);\n    },\n    async saveOrder() {\n      if (!(this.orderTotalPrice <= 0) && this.getTable.table != null) {\n        const resp = await utils.http.post(\"/user/order/create\", {\n          orderTable: this.getTable.table,\n          orderItems: this.cart,\n          orderUser: this.loginUser,\n          orderTotal: this.orderTotalPrice,\n        });\n\n        if (resp && resp.status === 200) {\n          this.$router.push({ path: \"/table\" });\n          this.$router.go(0);\n        }\n      }\n    },\n    // async addOnOrder() {\n    //   const resp = await utils.http.post(\"/user/order/create\", {\n    //     orderId: this.getTable.table.order.orderId,\n    //     orderTable: this.getTable.table,\n    //     orderItems: this.getTable.table.order.orderItems,\n    //     orderUser: this.loginUser,\n    //     orderTotal: this.updateOrderTotalPrice,\n    //   });\n\n    //   if (resp && resp.status === 200) {\n    //     this.$router.push({ path: \"/table\" });\n    //     this.$router.go(0);\n    //   }\n    // },\n    async updateOrder() {\n      const resp = await utils.http.put(\n        \"/user/order/update/\" + this.getTable.table.order.orderId,\n        {\n          orderId: this.getTable.table.order.orderId,\n          orderTable: this.getTable.table,\n          orderItems: this.getTable.table.order.orderItems,\n          orderUser: this.loginUser,\n          orderTotal: this.updateOrderTotalPrice,\n        }\n      );\n\n      if (resp && resp.status === 200) {\n        this.$router.push({ path: \"/table\" });\n        this.$router.go(0);\n      }\n    },\n    async fetchUserProfile() {\n      const response = await utils.http.get(\n        \"/user/profile?id=\" + this.loginUser.userId\n      );\n      if (response) {\n        const data = await response.json();\n        if (data) this.loginUser = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.v-card.borderme {\n  border: 2px solid #800015 !important;\n}\n.col-12 {\n  padding: 5px !important;\n}\n.v-btn.widthoutupercase {\n  color: #800015 !important;\n  text-transform: none !important;\n}\n.v-btn:hover {\n  background-color: #800015 !important;\n  color: white !important;\n}\n.v-btn--fab.v-size--x-small {\n  height: 15px;\n  width: 15px;\n  margin: 2px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}