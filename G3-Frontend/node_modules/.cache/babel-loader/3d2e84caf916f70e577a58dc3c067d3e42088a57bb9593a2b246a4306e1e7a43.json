{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport TableView from \"../views/TableView.vue\";\nimport RegisterView from \"../views/RegisterView.vue\";\nimport MenuView from \"../views/MenuView.vue\";\nimport OrderView from \"../views/OrderView.vue\";\nimport ProfileView from \"../views/ProfileView.vue\";\nimport AdminUserView from \"../views/AdminUserView.vue\";\nimport AdminView from \"../views/AdminView.vue\";\nimport AdminCategoryView from \"../views/AdminCategoryView.vue\";\nimport AdminTableView from \"../views/AdminTableView.vue\";\nimport { map } from \"core-js/core/array\";\nimport { mapGetters } from \"vuex\";\nVue.use(VueRouter);\nconst routes = [{\n  path: \"/register\",\n  name: \"register\",\n  component: RegisterView\n}, {\n  path: \"/home\",\n  name: \"home\",\n  component: TableView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/menu\",\n  name: \"menu\",\n  component: MenuView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/profile\",\n  name: \"profile\",\n  component: ProfileView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/order\",\n  name: \"order\",\n  component: OrderView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/admin/food\",\n  name: \"admin\",\n  component: AdminView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/user\",\n  name: \"userList\",\n  component: AdminUserView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/category\",\n  name: \"categorylist\",\n  component: AdminCategoryView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: \"/admin/table\",\n  name: \"tablelist\",\n  component: AdminTableView,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}];\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  let loginUser = mapGetters[\"loginUser\"];\n  let isLogin = router.app.$store.getters.isLogin;\n  console.log(loginUser);\n  console.log(isLogin);\n  // from - Home\n  // to - Profile\n  // Need to be login, But is not login\n  if (to.meta.requiresAuth == true && !isLogin) {\n    next({\n      path: \"/register\"\n    });\n  }\n\n  // Need to be login, Need to be admin\n  else if (to.meta.requiresAuth == true && to.meta.requiresAdmin == true && loginUser.userRoles[0].roleName != \"ADMIN\") {\n    next({\n      path: \"/register\"\n    });\n  }\n\n  // If All Okay\n  else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","TableView","RegisterView","MenuView","OrderView","ProfileView","AdminUserView","AdminView","AdminCategoryView","AdminTableView","map","mapGetters","use","routes","path","name","component","meta","requiresAuth","requiresAdmin","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","loginUser","isLogin","app","$store","getters","console","log","userRoles","roleName"],"sources":["/Users/winmon/Desktop/orderservice-frontend-v3/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport TableView from \"../views/TableView.vue\";\nimport RegisterView from \"../views/RegisterView.vue\";\nimport MenuView from \"../views/MenuView.vue\";\nimport OrderView from \"../views/OrderView.vue\";\nimport ProfileView from \"../views/ProfileView.vue\";\nimport AdminUserView from \"../views/AdminUserView.vue\";\nimport AdminView from \"../views/AdminView.vue\";\nimport AdminCategoryView from \"../views/AdminCategoryView.vue\";\nimport AdminTableView from \"../views/AdminTableView.vue\";\nimport { map } from \"core-js/core/array\";\nimport { mapGetters } from \"vuex\";\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: \"/register\",\n    name: \"register\",\n    component: RegisterView,\n  },\n  {\n    path: \"/home\",\n    name: \"home\",\n    component: TableView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/menu\",\n    name: \"menu\",\n    component: MenuView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/profile\",\n    name: \"profile\",\n    component: ProfileView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/order\",\n    name: \"order\",\n    component: OrderView,\n    meta: {\n      requiresAuth: true,\n    },\n  },\n  {\n    path: \"/admin/food\",\n    name: \"admin\",\n    component: AdminView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/user\",\n    name: \"userList\",\n    component: AdminUserView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/category\",\n    name: \"categorylist\",\n    component: AdminCategoryView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n  {\n    path: \"/admin/table\",\n    name: \"tablelist\",\n    component: AdminTableView,\n    meta: {\n      requiresAuth: true,\n      requiresAdmin: true,\n    },\n  },\n];\n\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  let loginUser = mapGetters[\"loginUser\"];\n  let isLogin = router.app.$store.getters.isLogin;\n\n  console.log(loginUser);\n  console.log(isLogin);\n  // from - Home\n  // to - Profile\n  // Need to be login, But is not login\n  if (to.meta.requiresAuth == true && !isLogin) {\n    next({ path: \"/register\" });\n  }\n\n  // Need to be login, Need to be admin\n  else if (\n    to.meta.requiresAuth == true &&\n    to.meta.requiresAdmin == true &&\n    loginUser.userRoles[0].roleName != \"ADMIN\"\n  ) {\n    next({ path: \"/register\" });\n  }\n\n  // If All Okay\n  else {\n    next();\n  }\n});\nexport default router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}