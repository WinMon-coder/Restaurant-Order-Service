{"ast":null,"code":"import utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"UserView\",\n  components: {\n    AdminSideBar\n  },\n  data: () => ({\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    selectDemo: {},\n    updateDemo: {},\n    status: [\"ACTIVE\", \"REST\"],\n    headers: [{\n      text: \"id\",\n      align: \"start\",\n      sortable: false,\n      value: \"userId\"\n    }, {\n      text: \"User Name\",\n      value: \"userFullName\"\n    }, {\n      text: \"User Gmail\",\n      value: \"userEmail\"\n    }, {\n      text: \"User Status\",\n      value: \"userStatus\"\n    }, {\n      text: \"Created At\",\n      value: \"createdAt\",\n      sortable: true\n    }, {\n      text: \"Start Join Date\",\n      value: \"startJoinDate\"\n    }, {\n      text: \"Last Join Date\",\n      value: \"lastJoinDate\"\n    }, {\n      text: \"Updated At\",\n      value: \"updatedAt\",\n      sortable: true\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }],\n    userList: []\n  }),\n  async created() {\n    await this.fetchAllUsers();\n  },\n  methods: {\n    // <!-- -------------****** get all users from utils.http ******-------------------------- -->\n    async fetchAllUsers() {\n      const response = await utils.http.get(\"/admin/user/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.userList = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    },\n    // <!-- -------------****** update user from utils.http ******-------------------------- -->\n    async updateItemConfirm() {\n      const resp = await utils.http.put(\"/admin/user/update_status/\", {\n        userId: this.updateDemo.userId,\n        userStatus: this.updateDemo.userStatus,\n        startJoinDate: this.updateDemo.startJoinDate,\n        lastJoinDate: this.updateDemo.lastJoinDate\n      });\n      if (resp) {\n        await this.fetchAllUsers();\n        this.update_dialog = false;\n      }\n    },\n    // <!-- -------------****** delete user from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/user/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllUsers();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      this.updateDemo = item;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AAwHA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;IAAA,GACA;MAAAH;MAAAG;IAAA,GACA;MAAAH;MAAAG;MAAAD;IAAA,GACA;MAAAF;MAAAG;MAAAD;IAAA,EACA;IACAE;EACA;EAEA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;QACA;QACA;MACA;QACAC;MACA;IACA;IAEA;IACA;MACA;QACAC;QACAC;QACAC;QACAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACA;;IAEAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","AdminSideBar","data","dialog","update_dialog","delete_dialog","selectDemo","updateDemo","status","headers","text","align","sortable","value","userList","methods","console","userId","userStatus","startJoinDate","lastJoinDate","deleteItem","editItem","closeUpdate","closeDelete","saveCancel"],"sourceRoot":"src/views","sources":["AdminUserView.vue"],"sourcesContent":["<template>\n  <div>\n    <AdminSideBar />\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"userList\"\n      :items-per-page=\"5\"\n      class=\"elevation-1\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title><strong>User CRUD</strong></v-toolbar-title>\n        </v-toolbar>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon color=\"red\" class=\"mr-2\" @click=\"editItem(item)\">\n          mdi-pencil\n        </v-icon>\n        <v-icon color=\"blue darken-1\" @click=\"deleteItem(item)\">\n          mdi-delete\n        </v-icon>\n      </template>\n    </v-data-table>\n    <v-toolbar>\n      <!-- -------------****** update ******-------------------------- -->\n      <v-dialog v-model=\"update_dialog\" max-width=\"700px\">\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h4\">Edit -> </span>\n            <h3>User Status, Start Join Date, and Last Join Date</h3>\n          </v-card-title>\n          <v-card-text>\n            <v-container>\n              <!-- User Name -->\n              <v-row>\n                <v-col>\n                  <v-text-field\n                    v-model=\"updateDemo.userFullName\"\n                    label=\"User Name\"\n                    disabled\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n              <!-- User Email -->\n              <v-row>\n                <v-col>\n                  <v-text-field\n                    v-model=\"updateDemo.userEmail\"\n                    label=\"User Email\"\n                    disabled\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n\n              <!-- User Status -->\n              <v-row>\n                <v-col>\n                  <v-select\n                    :items=\"status\"\n                    label=\"User Status\"\n                    v-model=\"updateDemo.userStatus\"\n                  >\n                  </v-select>\n                </v-col>\n              </v-row>\n\n              <!-- Start Join Date -->\n              <!-- Last Join Date -->\n              <v-row>\n                <v-col>\n                  <h3>Start Join Date</h3>\n                  <template>\n                    <v-date-picker\n                      v-model=\"updateDemo.startJoinDate\"\n                    ></v-date-picker>\n                  </template>\n                </v-col>\n                <v-col>\n                  <h3>Last Join Date</h3>\n                  <template>\n                    <v-date-picker\n                      v-model=\"updateDemo.lastJoinDate\"\n                    ></v-date-picker>\n                  </template>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"red\" text @click=\"closeUpdate\">Cancel</v-btn>\n            <v-btn color=\"blue darken-1\" text @click=\"updateItemConfirm()\"\n              >Update</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- -------------****** delete ******-------------------------- -->\n      <v-container>\n        <v-dialog v-model=\"delete_dialog\" max-width=\"400px\">\n          <v-card>\n            <v-card-title class=\"text-h6\"\n              >Are you sure you want to delete this?</v-card-title\n            >\n            <v-card-text>User ID:{{ selectDemo.userId }}</v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn text @click=\"closeDelete\">Cancel</v-btn>\n              <v-btn text @click=\"deleteItemConfirm(selectDemo.userId)\"\n                >Delete</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-container>\n    </v-toolbar>\n  </div>\n</template>\n\n<script>\nimport utils from \"@/utils/utils\";\nimport AdminSideBar from \"@/components/AdminSideBar.vue\";\nexport default {\n  name: \"UserView\",\n  components: {\n    AdminSideBar,\n  },\n  data: () => ({\n    dialog: false,\n    update_dialog: false,\n    delete_dialog: false,\n    selectDemo: {},\n    updateDemo: {},\n    status: [\"ACTIVE\", \"REST\"],\n    headers: [\n      {\n        text: \"id\",\n        align: \"start\",\n        sortable: false,\n        value: \"userId\",\n      },\n      { text: \"User Name\", value: \"userFullName\" },\n      { text: \"User Gmail\", value: \"userEmail\" },\n      { text: \"User Status\", value: \"userStatus\" },\n      { text: \"Created At\", value: \"createdAt\", sortable: true },\n      { text: \"Start Join Date\", value: \"startJoinDate\" },\n      { text: \"Last Join Date\", value: \"lastJoinDate\" },\n      { text: \"Updated At\", value: \"updatedAt\", sortable: true },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    userList: [],\n  }),\n\n  async created() {\n    await this.fetchAllUsers();\n  },\n  methods: {\n    // <!-- -------------****** get all users from utils.http ******-------------------------- -->\n    async fetchAllUsers() {\n      const response = await utils.http.get(\"/admin/user/list\");\n      if (response) {\n        const data = await response.json();\n        if (data) this.userList = data;\n      } else {\n        console.log(\"sth wromg\");\n      }\n    },\n\n    // <!-- -------------****** update user from utils.http ******-------------------------- -->\n    async updateItemConfirm() {\n      const resp = await utils.http.put(\"/admin/user/update_status/\", {\n        userId: this.updateDemo.userId,\n        userStatus: this.updateDemo.userStatus,\n        startJoinDate: this.updateDemo.startJoinDate,\n        lastJoinDate: this.updateDemo.lastJoinDate,\n      });\n      if (resp) {\n        await this.fetchAllUsers();\n        this.update_dialog = false;\n      }\n    },\n\n    // <!-- -------------****** delete user from utils.http ******-------------------------- -->\n    async deleteItemConfirm(id) {\n      const resp = await utils.http.del(\"/admin/user/delete/\" + id);\n      if (resp.status == 200) {\n        await this.fetchAllUsers();\n        this.delete_dialog = false;\n      }\n    },\n    // <!-- -------------******  event handelar from dialog ******-------------------------- -->\n\n    deleteItem(item) {\n      this.delete_dialog = true;\n      this.selectDemo = item;\n    },\n    editItem(item) {\n      this.update_dialog = true;\n      this.updateDemo = item;\n    },\n    closeUpdate() {\n      this.update_dialog = false;\n    },\n    closeDelete() {\n      this.delete_dialog = false;\n    },\n    saveCancel() {\n      this.dialog = false;\n    },\n  },\n};\n</script>\n\n<style>\n.v-btn:hover {\n  background-color: primary;\n  color: white !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}